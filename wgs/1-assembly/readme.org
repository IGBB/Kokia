#+TITLE: Assembly
#+PROPERTY:  header-args :var DIR=(my/dir)

#+name: transpose
#+header: table=""
#+begin_src elisp
(org-table-transpose-table-at-point table)
#+end_src

* Kokia drynarioides JFW-HI

** Contigs
- Remove lambda and remove reads shorter than 4kb from nanopore data
  #+header: :var runs=../0-raw/readme.org:kd-nanopore-runs[,1]
  #+begin_src sh :tangle kd/1-trim.sh
RAW=$(realpath $DIR/../0-raw/)

printf "$RAW/%s/fastq_pass.fq.gz\n" "${runs[@]}" |
    xargs $DIR/apps/devour -t 20 -l 4000 |
    gzip > kd/clean.fq.gz
  #+end_src
- Assemble contigs using canu
  #+begin_src sh :tangle kd/2-canu.sh
ml canu/2.1
canu \
    -p canu -d $DIR/kd \
    genomeSize=590m \
    gridOptions="-A191400-327070 --time=48:00:00" \
    useGrid=true \
    -nanopore $DIR/kd/clean.fq.gz


  #+end_src

  |        | canu/2.1 |
  |--------+----------|
  | n      |     2264 |
  | n:500  |     2264 |
  | L50    |       54 |
  | min    |     1197 |
  | N75    |  1201645 |
  | N50    |  2757100 |
  | N25    |  4885516 |
  | E-size |  4190213 |
  | max    |  22.95e6 |
  | sum    |  551.1e6 |
- clean canu directory
  #+begin_src sh
pushd $DIR/kd
rm -fr canu-logs/ \
    canu-scripts/ \
    canu.seqStore/ \
    correction/ \
    trimming/ \
    unitigging/ \
    canu.out

gzip *.fasta canu.contigs.layout.*

git add canu.report canu.seqStore.err

git annex add canu.contigs.fasta.gz \
    canu.contigs.layout.readToTig.gz \
    canu.contigs.layout.tigInfo.gz \
    canu.correctedReads.fasta.gz \
    canu.trimmedReads.fasta.gz \
    canu.unassembled.fasta.gz

#+end_src
- dotplot against kirkii

  #+begin_src sh
ml minimap2/2.17 r/4.0.2

minimap2 -x asm5 -t 20 \
    $DIR/0-ref/kirkii.fa $DIR/kd/canu.contigs.fasta \
    > $DIR/kd/canu.kirkii.paf

cd $DIR/kd
Rscript $DIR/apps/dotplots/pafCoordsDotPlotly.R -i canu.kirkii.paf \
    -o canu.kirkii -m 20000 -x -s -t -l -p 12
  #+end_src

** Hi-C Scaffolding
- Create bwa database for assembly
  #+begin_src sh :tangle kd/2-hic/0-ref/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}

bwa index -a bwtsw -p $DIR/kd/2-hic/0-ref/kd.bwa $DIR/kd/canu.contigs.fasta
samtools faidx $DIR/kd/canu.contigs.fasta
  #+end_src
- Align Hi-C data to assembly
  #+header: :var data=../0-raw/readme.org:kd-hic
  #+begin_src sh :tangle kd/2-hic/1-bwa/run.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $DIR/../0-raw/)

ml singularity/3.7.3
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
PATH=$PATH:$DIR/apps/samblaster

for name in "${!data[@]}"; do
    readarray -t libs <<< "${data[$name]}"

    bwa mem -5SP -t 24 $DIR/kd/2-hic/0-ref/kd.bwa $RAW/${libs[0]} $RAW/${libs[1]} |
        samblaster |
        samtools view -bS -F 2316 > $DIR/kd/2-hic/1-bwa/$name.bam
done

  #+end_src

- Validate libraries
  #+header: :var data=../0-raw/readme.org:kd-hic
  #+begin_src sh :tangle 2-hic/2-qc/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml python/3.9.2
export PYTHONPATH=$PYTHONPATH:~/.local/lib/python3.9/site-packages/
source $DIR/apps/hic_qc/bin/activate

for name in "${!data[@]}"; do
    $DIR/apps/hic_qc/hic_qc.py \
        -b $DIR/2-hic/1-bwa/$name.bam \
        -o $DIR/2-hic/2-qc/$name \
        --lib_enzyme GATC
done

  #+end_src

- Convert bams to single bed
  #+header: :var data=../0-raw/readme.org:kd-hic[,0]
  #+begin_src sh :tangle kd/2-hic/3-convert.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3
bedtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bedtools/bedtools-2.28.0.sif bedtools $@
}

export ROOT DIR
export -f bedtools

parallel --eta bedtools bamtobed -i $DIR/kd/2-hic/1-bwa/{}.bam \
    ::: "${data[@]}" > $DIR/kd/2-hic/3-alignments.bed
  #+end_src
- Run SALSA
  #+begin_src sh :tangle kd/2-hic/4-salsa/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3

singularity exec -B $ROOT $DIR/apps/salsa2_2.3--py27h16ec135_1.sif \
    run_pipeline.py \
    -i 15 \
    -a $DIR/kd/canu.contigs.fasta \
    -l $DIR/kd/canu.contigs.fasta.fai \
    -b $DIR/kd/2-hic/3-alignments.bed \
    -e GATC \
    -s 590000000 \
    -o $DIR/kd/2-hic/4-salsa/ \
    -p yes
  #+end_src

  #+begin_src sh :tangle kd/2-hic/4-salsa/stat.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
    $DIR/kd/2-hic/4-salsa/scaffolds_ITERATION_*.fasta \
    $DIR/kd/2-hic/4-salsa/scaffolds_FINAL.fasta 
    

  #+end_src

  #+RESULTS:
  |    n | n:500 | L50 |  min |     N75 |     N50 |     N25 |  E-size |        max |         sum |  name |
  | 1832 |  1832 |  48 | 1197 | 1337726 | 3293652 | 5573229 | 4604924 | 22950000.0 | 551100000.0 |     1 |
  | 1663 |  1663 |  46 | 1197 | 1455819 | 3362451 | 6249823 | 4727382 | 22950000.0 | 551100000.0 |     2 |
  | 1596 |  1596 |  45 | 1197 | 1680764 | 3702737 | 6262271 | 4841897 | 22950000.0 | 551100000.0 |     3 |
  | 1571 |  1571 |  43 | 1197 | 1722624 | 3786187 | 6299587 | 4959276 | 22950000.0 | 551100000.0 |     4 |
  | 1596 |  1596 |  45 | 1197 | 1680764 | 3702737 | 6262271 | 4841897 | 22950000.0 | 551100000.0 | FINAL |


- dotplot against kirkii

  #+begin_src sh
ml minimap2/2.17 r/4.0.25

cd $DIR/kd/

minimap2 -x asm5 -t 20 \
    $DIR/0-ref/kirkii.fa $DIR/kd/2-hic/4-salsa/scaffolds_ITERATION_4.fasta \
    > $DIR/kd/hic.kirkii.paf

Rscript $DIR/apps/dotplots/pafCoordsDotPlotly.R -i $DIR/kd/hic.kirkii.paf \
    -o hic.kirkii -m 20000 -x -s -t -l -p 12
  #+end_src
** Arrange/Orient
- Orient and arrange using /Gossipiodes kirkii/
  #+begin_src sh :tangle kd/3-ragtag/run.sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity

ragtag () {
    singularity exec --no-home -B$ROOT \
        $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
        ragtag.py "$@"

}

ragtag scaffold -u -t 48 -q 60 -o $DIR/kd/3-ragtag/ -i 0.75  \
    $DIR/0-ref/kirkii.fa $DIR/kd/canu.contigs.fasta
  #+end_src

#+CALL: apps/dotplots.org:dotplot()

#+RESULTS:
: /project/90daydata/gbru_kokia/Kokia/wgs/1-assembly/

** sup model

Using the 'Nanopore flip-flop R9.4 or R10.3' settings because of the reduced
error rate for the latest basecalling data.

#+begin_src sh :tangle kd.sup/run.sh
RAW=$(realpath $DIR/../0-raw/)
PATH=$DIR/apps/canu-2.2/bin:$PATH

canu \
    -p canu -d $DIR/kd.sup \
    genomeSize=590m \
    gridOptions="-Acotton_genomics" \
    useGrid=true \
    corMhapOptions='--threshold 0.8 --ordered-sketch-size 1000 --ordered-kmer-size 14' \
    correctedErrorRate=0.105 \
    -nanopore $RAW/*/sup.pass.fq.gz


#+end_src

| n      |               2365 |
| n:500  |               2365 |
| L50    |                 89 |
| min    |               1206 |
| N75    |             755687 |
| N50    |            1659488 |
| N25    |            3113363 |
| E-size |            2550534 |
| max    |            11.36e6 |
| sum    |            552.8e6 |
| name   | canu.contigs.fasta |

- Clean canu directory (see previous)

* Kokia kauaiensis S9

#+begin_src shell
ml singularity

singularity exec -B $DIR \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
    $DIR/kk/1-contigs/wtdbg2/dbg.raw.fa \
    $DIR/kk/2-polish/consensus.fasta \
    $DIR/kk/3-scaffolds/3-salsa/scaffolds_FINAL.fasta \
    $DIR/kk/4-gapfill/gapless_run/gapless.fa
#+end_src

#+RESULTS:
| name   | 1-contigs | 2-polish | 3-scaffolds | 4-gapfill |
|--------+-----------+----------+-------------+-----------|
| n      |       710 |      710 |         364 |      2886 |
| n:500  |       710 |      710 |         364 |      2885 |
| L50    |        50 |       50 |          19 |       275 |
| min    |      2261 |     2270 |        2270 |       557 |
| N75    |   1590418 |  1590831 |     3762302 |    249188 |
| N50    |   2861231 |  2861712 |     8295611 |    471121 |
| N25    |   5194771 |  5195752 |     14.21e6 |    955904 |
| E-size |   3637209 |  3637948 |     9181974 |    759861 |
| max    |   13.44e6 |  13.45e6 |     22.95e6 |   4369655 |
| sum    |   489.4e6 |  489.5e6 |     489.5e6 |   507.8e6 |
#+tblfm: @I$2..@>$>=$0;e4

** 1-contigs
#+header: :var runs=../0-raw/readme.org:kk-nanopore-sup[,1]
#+begin_src sh :tangle kk/combine.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $ROOT/0-raw/)

for file in "${runs[@]}"; do
      tar -Oxf $ROOT/wgs/0-raw/$file
done |
    zcat -f > $DIR/kk/combined.fq
#+end_src

- shasta

  #+begin_src sh :tangle kk/1-contigs/shasta.sh
ROOT=$(git rev-parse --show-toplevel)

$DIR/apps/shasta-0.10.0 \
    --input $DIR/kk/combined.fq \
    --threads 48 \
    --config Nanopore-May2022 \
    --assemblyDirectory $DIR/kk/1-contigs/shasta/
  #+end_src

  #+name: abyss-fac
  #+header: :var genome="kk/1-contigs/shasta/Assembly.fasta"
  #+begin_src shell
cd $DIR
ROOT=$(git rev-parse --show-toplevel)
ml singularity/3.8.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac $genome
  #+end_src

  #+RESULTS: abyss-fac
  | n      |       13671 |
  | n:500  |       13501 |
  | L50    |        2894 |
  | min    |         507 |
  | N75    |       17224 |
  | N50    |       29894 |
  | N25    |       48305 |
  | E-size |       36036 |
  | max    |      238763 |
  | sum    | 277400000.0 |
  | name   |   kk/shasta |

- hifiasm
  #+begin_src sh :tangle kk/1-contigs/hifiasm.sh
PATH=$DIR/apps/hifiasm-0.16.1/:$PATH

hifiasm -t 48 -o $DIR/kk/1-contigs/hifiasm $DIR/kk/combined.fq
awk '/^S/{print ">"$2;print $3}' $DIR/kk/1-contigs/hifiasm.bp.p_ctg.gfa \
    > $DIR/kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa
  #+end_src

  #+call: abyss-fac(genome="kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa")

  #+RESULTS:
  | n      |        2625 |
  | n:500  |        2625 |
  | L50    |         297 |
  | min    |        3598 |
  | N75    |      213535 |
  | N50    |      483159 |
  | N25    |      906223 |
  | E-size |      721462 |
  | max    |     4146154 |
  | sum    | 536100000.0 |
  | name   |  kk/hifiasm |

  - dotplot against kirkii

    #+call: dotplot-kirkii(genome="kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa")

    #+ATTR_ORG: :width 750
    [[./kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa.kirkii.png]]
- wtdbg2

  Assemble with wtdbg2 PacBio CCS reads look to have a similar error rate to the
  latest nanopore basecalling model, sup. Trying those presets.
  #+begin_src sh :tangle kk/1-contigs/wtdbg2/run.sh
PATH=$DIR/apps/wtdbg-2.5_x64_linux/:$PATH

cd $DIR/kk/1-contigs/wtdbg2/
wtdbg2 -x ccs -g 590m -i $DIR/kk/combined.fq -t 48 -fo dbg

# derive consensus
wtpoa-cns -t 48 -i dbg.ctg.lay.gz -fo dbg.raw.fa


  #+end_src

  - Assembly Stats
  #+call: abyss-fac(genome="kk/1-contigs/wtdbg2/dbg.raw.fa")

  #+RESULTS:
  | n      |         710 |
  | n:500  |         710 |
  | L50    |          50 |
  | min    |        2261 |
  | N75    |     1590418 |
  | N50    |     2861231 |
  | N25    |     5194771 |
  | E-size |     3637209 |
  | max    |  13440000.0 |
  | sum    | 489400000.0 |

  - dotplot against kirkii

   #+call: dotplot-kirkii(genome="kk/1-contigs/wtdbg2/dbg.raw.fa")

   #+ATTR_ORG: :width 750
    [[./kk/1-contigs/wtdbg2/dbg.raw.fa.kirkii.png]]
- canu

  #+begin_src sh :tangle kk/1-contigs/canu/run.sh
PATH=$DIR/apps/canu-2.2/bin:$PATH

canu -p canu -d $DIR/kk/1-contigs/canu/ useGrid=true gridOptions=-Agbru_kokia \
     genomeSize=590m -nanopore $DIR/kk/combined.fq
  #+end_src

  #+call: abyss-fac(genome="kk/1-contigs/canu/canu.contigs.fasta")

  #+RESULTS:
  | n      |        8047 |
  | n:500  |        8047 |
  | L50    |         521 |
  | min    |        1114 |
  | N75    |      103348 |
  | N50    |      280353 |
  | N25    |      572593 |
  | E-size |      530926 |
  | max    |     7688614 |
  | sum    | 583800000.0 |
  | name   |    kk/canu/ |

- flye

  modified =Flye/flye/config/bin_cfg/asm_nano_hq.cfg= based on the following quote provided by Tony from [[https://community.nanoporetech.com/docs/plan/best_practice/kit-14-device-and-informatics/v/k14_s1019_v1_revg_29jun2022][here]]

  #+begin_quote
Configuring the command line parameter --min-overlap 10000 should deliver a modest improvement in assembly contiguity when using libraries optimised for read length.
It is recommended that the --nano-corr parameter is set (to specify that the sequences are "corrected"). This provides a significant improvement to assembly NG50 compared to when the --nano-raw (uncorrected sequence) setting is used. We have observed NG50 increases from 58 Mb to 67 Mb for collapsed assemblies, when assembling both haplotypes at once.
We typically adjust the "asm_corrected_reads.cfg file in the flye/config/bin_cfg/ folder to increase haplotype-specific assembly NG50s and to remove any major misjoins.
a. enable homopolymer compressed scoring (hpc_scoring_on = 1)
b. increase the minimizer_window to 10
c. decrease the repeat_graph_ovlp_divergence to 0.005 increases haplotype-specific assembly NG50s to 84 Mb/84 Mb and removes all major misjoins
  #+end_quote

  #+begin_src shell :tangle kk/1-contigs/flye/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-hq $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye/ \
        -t 40
  #+end_src

    #+begin_src shell :tangle kk/1-contigs/flye_polish_10/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-hq $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye_polish_10/ \
        -i 10 \
        -t 20
  #+end_src

  #+call: abyss-fac(genome="kk/1-contigs/flye/assembly.fasta")

  #+RESULTS:
  | n      |                             7831 |
  | n:500  |                             7830 |
  | L50    |                             1455 |
  | min    |                              528 |
  | N75    |                            59817 |
  | N50    |                           112586 |
  | N25    |                           192405 |
  | E-size |                           139951 |
  | max    |                           721500 |
  | sum    |                      547000000.0 |
  | name   | kk/1-contigs/flye/assembly.fasta |

  modified =Flye/flye/config/bin_cfg/asm_corrected_reads.cfg= based on the following quote provided by Tony from [[https://community.nanoporetech.com/docs/plan/best_practice/kit-14-device-and-informatics/v/k14_s1019_v1_revg_29jun2022][here]]

  #+begin_quote
Configuring the command line parameter --min-overlap 10000 should deliver a modest improvement in assembly contiguity when using libraries optimised for read length.
It is recommended that the --nano-corr parameter is set (to specify that the sequences are "corrected"). This provides a significant improvement to assembly NG50 compared to when the --nano-raw (uncorrected sequence) setting is used. We have observed NG50 increases from 58 Mb to 67 Mb for collapsed assemblies, when assembling both haplotypes at once.
We typically adjust the "asm_corrected_reads.cfg file in the flye/config/bin_cfg/ folder to increase haplotype-specific assembly NG50s and to remove any major misjoins.
a. enable homopolymer compressed scoring (hpc_scoring_on = 1)
b. increase the minimizer_window to 10
c. decrease the repeat_graph_ovlp_divergence to 0.005 increases haplotype-specific assembly NG50s to 84 Mb/84 Mb and removes all major misjoins
  #+end_quote

  #+begin_src shell :tangle kk/1-contigs/flye_corr/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-corr $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye_corr/ \
        -t 40
  #+end_src

    #+begin_src shell :tangle kk/1-contigs/flye_corr_polish_10/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-corr $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye_corr_polish_10/ \
        -i 10 \
        -t 20
  #+end_src

  #+call: abyss-fac(genome="kk/1-contigs/flye_corr/assembly.fasta")

  #+RESULTS:
  | n      |                                  6994 |
  | n:500  |                                  6992 |
  | L50    |                                  1282 |
  | min    |                                   508 |
  | N75    |                                 66664 |
  | N50    |                                124051 |
  | N25    |                                214308 |
  | E-size |                                155190 |
  | max    |                                835109 |
  | sum    |                           534400000.0 |
  | name   | kk/1-contigs/flye_corr/assembly.fasta |

- hifiasm + hic phasing

  #+begin_src sh :tangle 1-contigs/hifiasm.phase/run.sh
PATH=$DIR/apps/hifiasm/:$PATH

hifiasm -t 48 -o $DIR/1-contigs/hifiasm.phase/genome \
    --h1 $DIR/hic-1.fq.gz --h2 $DIR/hic-2.fq.gz \
    $DIR/kk/combined.fq
  #+end_src

  - stats for all steps of assembly
    #+begin_src sh :tangle 1-contigs/hifiasm.phase/stats.sh
ml singularity
for file in $DIR/1-contigs/hifiasm.phase/*tg.gfa; do
    name=$(basename $file .gfa)
    echo $name
    awk '/^S/{print ">"$2;print $3}' $file |
        singularity exec \
            /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
            /usr/lib/abyss/abyss-fac
    done
    #+end_src

    #+RESULTS:
    |        | hap1.p_ctg | hap2.p_ctg |   p_ctg |  p_utg |   r_utg |
    |--------+------------+------------+---------+--------+---------|
    | n      |      26223 |      19372 |   19068 | 122093 |  209639 |
    | n:500  |      26223 |      19372 |   19068 | 122093 |  209639 |
    | L50    |       4479 |       4098 |    3174 |  17668 |   38157 |
    | min    |        784 |       2041 |     784 |    736 |     549 |
    | N75    |      86016 |      90966 |  143428 |  29982 |   16629 |
    | N50    |     154423 |     155932 |  267102 |  71170 |   37222 |
    | N25    |     254397 |     255839 |  473225 | 132325 |   70755 |
    | E-size |     189646 |     193792 |  352843 |  98338 |   50435 |
    | max    |    1472460 |    1402750 | 2041097 | 942329 |  398672 |
    | sum    |    2.264e9 |    2.085e9 | 2.928e9 | 4.56e9 | 5.188e9 |
  - =tar= output files (sorted by relevance and size)

    #+begin_src shell :tangle 1-contigs/hifiasm.phase/tar.sh
tar -czf $DIR/1-contigs/hifiasm.phase.tar.gz \
    -C   $DIR/1-contigs/hifiasm.phase/ \
    genome.hic.hap1.p_ctg.gfa \
    genome.hic.hap2.p_ctg.gfa \
    genome.hic.p_ctg.gfa \
    genome.hic.p_utg.gfa \
    genome.hic.r_utg.gfa \
    genome.hic.hap2.p_ctg.noseq.gfa \
    genome.hic.hap1.p_ctg.noseq.gfa \
    genome.hic.p_ctg.noseq.gfa \
    genome.hic.p_utg.noseq.gfa \
    genome.hic.r_utg.noseq.gfa \
    genome.hic.hap2.p_ctg.lowQ.bed \
    genome.hic.hap1.p_ctg.lowQ.bed \
    genome.hic.p_ctg.lowQ.bed \
    genome.hic.p_utg.lowQ.bed \
    genome.hic.r_utg.lowQ.bed \
    genome.hic.lk.bin \
    genome.ovlp.reverse.bin \
    genome.ovlp.source.bin \
    genome.ec.bin \
    genome.hic.tlb.bin
    #+end_src


- comparison

#+begin_src sh :colnames '("Statistic" "shasta" "canu" "wtdbg2" "hifasm" "flye (nano-hq)" "flye (nano-corr)")
ROOT=$(git rev-parse --show-toplevel)
ml singularity/3.8.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
        kk/1-contigs/shasta/Assembly.fasta \
        kk/1-contigs/canu/canu.contigs.fasta \
        kk/1-contigs/wtdbg2/dbg.raw.fa \
        kk/1-contigs/hifiasm/hifiasm.bp.p_ctg.fatest.p_ctg.fa \
        kk/1-contigs/flye/assembly.fasta \
        kk/1-contigs/flye_corr/assembly.fasta
#+end_src

#+RESULTS:
| name   |   shasta |      canu |     wtdbg2 |  hifiasm | flye (nano-hq) | flye (nano-corr) |
|--------+----------+-----------+------------+----------+----------------+------------------|
| n      |    13671 |      8047 |        710 |     2625 |           7831 |             6994 |
| n:500  |    13501 |      8047 |        710 |     2625 |           7830 |             6992 |
| L50    |     2894 |       521 |         50 |      297 |           1455 |             1282 |
| min    |      507 |      1114 |       2261 |     3598 |            528 |              508 |
| N75    |    17224 |    103348 |    1590418 |   213535 |          59817 |            66664 |
| N50    |    29894 |    280353 |    2861231 |   483159 |         112586 |           124051 |
| N25    |    48305 |    572593 |    5194771 |   906223 |         192405 |           214308 |
| E-size |    36036 |    530926 |    3637209 |   721462 |         139951 |           155190 |
| max    |   238763 |   7688614 | 13440000.0 |  4146154 |         721500 |           835109 |
| sum    | 277.4 Mb | 583.48 Mb |   489.4 Mb | 536.1 Mb |       547.0 Mb |         534.4 Mb |

#+ATTR_ORG: :width 750
[[./kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa.kirkii.png]]
#+ATTR_ORG: :width 750
[[./kk/1-contigs/wtdbg2/dbg.raw.fa.kirkii.png]]

Using wtdbg2 assembly.

** 2-polish
#+begin_src sh :tangle kk/2-polish/medaka.sh
ROOT=$(git rev-parse --show-toplevel)
export DIR ROOT

ml singularity/3.8.3

# clean up singularity medaka command. take the first element as subcommand,
# then remove it from stack. Pass the remaining stack to medaka cmd.
medaka () {
    cmd=medaka_$1
    shift;

    singularity exec -B $ROOT $DIR/apps/medaka_v1.7.1.sif $cmd $@;
}


medaka consensus -t 48 -m r104_e81_sup_g5015 \
    -i $DIR/kk/combined.fq \
    -d $DIR/kk/1-contigs/wtdbg2/dbg.raw.fa \
    -o $DIR/kk/2-polish/
#+end_src

** 3-scaffolds
- Create bwa database for assembly
  #+begin_src sh :tangle kk/3-scaffolds/0-ref.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
fasta=$DIR/kk/2-polish/consensus.fasta
bwa index -a bwtsw $fasta
samtools faidx $fasta
  #+end_src
- Align Hi-C data to assembly
  #+header: :var data=../0-raw/readme.org:kk-hic
  #+begin_src sh :tangle kk/3-scaffolds/1-bwa.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $DIR/../0-raw/)

ml singularity
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
PATH=$PATH:$DIR/apps/samblaster-v.0.1.26/

fasta=$DIR/kk/2-polish/consensus.fasta
for name in "${!data[@]}"; do
    readarray -t libs <<< "${data[$name]}"

    bwa mem -5SP -t 48 $fasta $RAW/${libs[0]} $RAW/${libs[1]} |
        samblaster |
        samtools view -bS -F 2316 > $DIR/kk/3-scaffolds/$name.bam
done

  #+end_src

  | Pair Type        |     Count |       % |      Dups | %Dups/Type_ID_Count | %Dups/All_Dups | %Dups/All_IDs |
  |------------------+-----------+---------+-----------+---------------------+----------------+---------------|
  | Both Unmapped    |   7454351 |   2.382 |         0 |               0.000 |          0.000 |         0.000 |
  | Orphan/Singleton |   6502503 |   2.078 |   3777584 |              58.094 |          2.116 |         1.207 |
  | Both Mapped      | 298951472 |  95.540 | 174722039 |              58.445 |         97.884 |        55.838 |
  | Total            | 312908326 | 100.000 | 178499623 |              57.045 |        100.000 |        57.045 |

  Marked 178499623 of 312908326 (57.045%) total read ids as duplicates using
  2700608k memory in 17M14S(1033.521S) CPU seconds and 1H40M40S(6040S) wall
  time.
- Convert bams to single bed
  #+header: :var data=../0-raw/readme.org:kk-hic[,0]
  #+begin_src sh :tangle kk/3-scaffolds/2-convert.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
bedtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bedtools/bedtools-2.28.0.sif bedtools $@
}

export ROOT DIR
export -f bedtools

parallel --eta bedtools bamtobed -i $DIR/kk/3-scaffolds/{}.bam \
    ::: "${data[@]}" > $DIR/kk/3-scaffolds/2-alignments.bed
  #+end_src
- Run SALSA
  #+begin_src sh :tangle kk/3-scaffolds/3-salsa/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
fasta=$DIR/kk/2-polish/consensus.fasta

singularity exec -B $ROOT $DIR/apps/salsa2_2.3--py27h16ec135_1.sif \
    run_pipeline.py \
    -i 15 \
    -a $fasta \
    -l $fasta.fai \
    -b $DIR/kk/3-scaffolds/2-alignments.bed \
    -e GATC \
    -s 590000000 \
    -o $DIR/kk/3-scaffolds/3-salsa/ \
    -p yes
  #+end_src

  #+begin_src sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
    $DIR/kk/2-polish/consensus.fasta \
    $DIR/kk/3-scaffolds/3-salsa/scaffolds_ITERATION_*.fasta \
    $DIR/kk/3-scaffolds/3-salsa/scaffolds_FINAL.fasta


  #+end_src

  #+RESULTS:
  | name   |   FINAL |   START |  ITER.1 |  ITER.2 |  ITER.3 |  ITER.4 |  ITER.5 |
  |--------+---------+---------+---------+---------+---------+---------+---------|
  | n      |     364 |     710 |     468 |     407 |     379 |     364 |     356 |
  | n:500  |     364 |     710 |     468 |     407 |     379 |     364 |     356 |
  | L50    |      19 |      50 |      29 |      22 |      20 |      19 |      19 |
  | min    |    2270 |    2270 |    2270 |    2270 |    2270 |    2270 |    2270 |
  | N75    | 3762302 | 1590831 | 3121390 | 3441939 | 3528934 | 3762302 | 4348404 |
  | N50    | 8295611 | 2861712 | 5650938 | 6689557 | 7526887 | 8295611 | 8295611 |
  | N25    | 14.21e6 | 5195752 | 9256108 | 10.90e6 | 12.68e6 | 14.21e6 | 14.21e6 |
  | E-size | 9181974 | 3637948 | 6236920 | 8036825 | 8738843 | 9181974 | 9228757 |
  | max    | 22.95e6 | 13.45e6 | 14.82e6 | 22.95e6 | 22.95e6 | 22.95e6 | 22.95e6 |
  | sum    | 489.5e6 | 489.5e6 | 489.5e6 | 489.5e6 | 489.5e6 | 489.5e6 | 489.5e6 |
  #+tblfm: @+I$3..@>$>=$0;e4

- dotplot against kirkii

  #+begin_src sh
ml minimap2/2.17 r/4.0.25

cd $DIR/kd/

minimap2 -x asm5 -t 20 \
    $DIR/0-ref/kirkii.fa $DIR/kd/2-hic/4-salsa/scaffolds_ITERATION_4.fasta \
    > $DIR/kd/hic.kirkii.paf

Rscript $DIR/apps/dotplots/pafCoordsDotPlotly.R -i $DIR/kd/hic.kirkii.paf \
    -o hic.kirkii -m 20000 -x -s -t -l -p 12
  #+end_src
** 4-gapfill
https://github.com/schmeing/gapless
#+begin_src sh :tangle kk/4-gapfill/run.sh
PATH=$PATH:$DIR/apps/gapless/

ml python/3.9.2 minimap2/2.17 zlib/1.2.11
PATH=$PATH:$DIR/apps/seqtk/:$DIR/apps/racon/build/bin

cd $DIR/kk/4-gapfill/

$DIR/apps/gapless/gapless.sh -j 30 \
    -i $DIR/kk/3-scaffolds/3-salsa/scaffolds_FINAL.fasta \
    -t nanopore $DIR/kk/combined.fq
#+end_src

#+begin_src shell
ml singularity

singularity exec -B $DIR \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
        $DIR/kk/4-gapfill/gapless_run/*/gapless.fa
#+end_src

#+RESULTS:
| name   |       pass1 |       pass2 |       pass3 |
|--------+-------------+-------------+-------------|
| n      |        2859 |        3877 |        2886 |
| n:500  |        2859 |        3876 |        2885 |
| L50    |         292 |         354 |         275 |
| min    |         547 |         576 |         557 |
| N75    |      201490 |      167781 |      249188 |
| N50    |      417018 |      358342 |      471121 |
| N25    |      897283 |      746835 |      955904 |
| E-size |      666765 |      585997 |      759861 |
| max    |     3760747 |     2828138 |     4369655 |
| sum    | 479300000.0 | 504400000.0 | 507800000.0 |

** 2-arrange
- Orient and arrange using /Gossipiodes kirkii/
  #+begin_src sh :tangle kk/2-arrange/run.sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity

ragtag () {
    singularity exec --no-home -B$ROOT \
        $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
        ragtag.py "$@"

}

ragtag scaffold -u -t 48 -q 60 -o $DIR/kk/2-arrange/ -i 0.75  \
    $DIR/0-ref/kirkii.fa $DIR/kk/1-contigs/wtdbg2/dbg.raw.fa
  #+end_src

  #+call: abyss-fac(genome="kk/2-arrange/ragtag.scaffold.fasta")

  #+RESULTS:
  | n      |       298 |
  | n:500  |       298 |
  | L50    |         6 |
  | N75    | 3.570e+07 |
  | N50    | 3.865e+07 |
  | N25    | 4.483e+07 |
  | E-size | 3.960e+07 |
  | max    | 5.632e+07 |
  | sum    | 4.894e+08 |
  #+TBLFM: @4$2..@>$2=$0;%0.3e

  #+call: dotplot-kirkii(genome="kc/2-arrange/ragtag.scaffold.fasta")

  #+ATTR_ORG: :width 750
  [[./kk/2-arrange/ragtag.scaffold.fasta.kirkii.png]]
* Kokia cookei C69

#+begin_src shell
ml singularity

singularity exec -B $DIR \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
    $DIR/kc/1-contigs/hifiasm/hifiasm.bp.p_ctg.fatest.p_ctg.fa \
    $DIR/kc/2-polish/consensus.fasta \
    $DIR/kc/3-scaffolds/3-salsa/scaffolds_FINAL.fasta \
    $DIR/kc/4-gapfill/gapless_run/gapless.fa
#+end_src

#+RESULTS:
| name   | 1-contigs | 2-polish | 3-scaffolds | 4-gapfill |
|--------+-----------+----------+-------------+-----------|
| n      |      1159 |     1159 |         737 |      1393 |
| n:500  |      1159 |     1159 |         737 |      1392 |
| L50    |       132 |      132 |          56 |       166 |
| min    |      3607 |     3604 |        3604 |       556 |
| N75    |    636832 |   636974 |      940582 |    496491 |
| N50    |   1248703 |  1248713 |     2106056 |    936718 |
| N25    |   2168255 |  2169096 |     5566932 |   1453812 |
| E-size |   1546437 |  1546714 |     4529403 |   1247270 |
| max    |   5878698 |  5879258 |     22.92e6 |   5411855 |
| sum    |   544.6e6 |  544.7e6 |     544.7e6 |   523.7e6 |
#+tblfm: @<<$2..@>$>=$0;e4

#+header: :var runs=../0-raw/readme.org:kc-nanopore-sup[,1]
#+begin_src sh :tangle kc/combine.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $ROOT/0-raw/)

for file in "${runs[@]}"; do
      tar -Oxf $ROOT/wgs/0-raw/$file
done |
    zcat -f > $DIR/kc/combined.fq
#+end_src

** 1-contigs
- shasta

  #+begin_src sh :tangle kc/1-contigs/shasta.sh
ROOT=$(git rev-parse --show-toplevel)

$DIR/apps/shasta-0.10.0 \
    --input $DIR/kc/combined.fq \
    --threads 48 \
    --config Nanopore-May2022 \
    --assemblyDirectory $DIR/kc/1-contigs/shasta/
  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/shasta/Assembly.fasta")

  #+RESULTS:
  | n      |        5477 |
  | n:500  |        5416 |
  | L50    |         859 |
  | min    |         503 |
  | N75    |      101520 |
  | N50    |      185196 |
  | N25    |      304546 |
  | E-size |      225639 |
  | max    |     1284992 |
  | sum    | 519500000.0 |
  | name   |   kc/shasta |
- hifiasm
  #+begin_src sh :tangle kc/1-contigs/hifiasm.sh
PATH=$DIR/apps/hifiasm-0.16.1/:$PATH

hifiasm -t 48 -o $DIR/kc/1-contigs/hifiasm $DIR/kc/combined.fq
awk '/^S/{print ">"$2;print $3}' $DIR/kc/1-contigs/hifiasm.bp.p_ctg.gfa \
    > $DIR/kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa
  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa")

  #+RESULTS:
  | n      |        1159 |
  | n:500  |        1159 |
  | L50    |         132 |
  | min    |        3607 |
  | N75    |      636832 |
  | N50    |     1248703 |
  | N25    |     2168255 |
  | E-size |     1546437 |
  | max    |     5878698 |
  | sum    | 544600000.0 |
  | name   |  kc/hifiasm |
  - dotplot against kirkii

    #+name: dotplot-kirkii
    #+header: :var genome="kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa"
    #+header: :var out="kc/1-contigs/hifiasm.kirkii.png"
    #+begin_src sh
ml gd/2.3.0

echo $DIR/apps/dotplot/dotplot -t 12 -p grey -o $DIR/$out $DIR/0-ref/kirki.fa $DIR/$genome
    #+end_src
    #+ATTR_ORG: :width 750
    [[./kc/1-contigs/hifiasm.kirkii.png]]
- wtdbg2

  Assemble with wtdbg2 PacBio CCS reads look to have a similar error rate to the
  latest nanopore basecalling model, sup. Trying those presets.

  #+begin_src sh :tangle kc/1-contigs/wtdbg2/run.sh
PATH=$DIR/apps/wtdbg-2.5_x64_linux/:$PATH

cd $DIR/kc/1-contigs/wtdbg2/
wtdbg2 -x ccs -g 590m -i $DIR/kc/combined.fq -t 48 -fo dbg

# derive consensus
wtpoa-cns -t 48 -i dbg.ctg.lay.gz -fo dbg.raw.fa


  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/wtdbg2/dbg.raw.fa")

  #+RESULTS:
  | n      |        1312 |
  | n:500  |        1312 |
  | L50    |          44 |
  | min    |        1335 |
  | N75    |     1795357 |
  | N50    |     3228960 |
  | N25    |     6031992 |
  | E-size |     4064933 |
  | max    |  11860000.0 |
  | sum    | 492700000.0 |
  | name   |   kc/wtdbg2 |

  - dotplot against kirkii

    #+call: dotplot-kirkii(genome="kc/1-contigs/wtdbg2/dbg.raw.fa")

    #+ATTR_ORG: :width 750
    [[./kc/1-contigs/wtdbg2/dbg.raw.fa.kirkii.png]]
- canu

  #+begin_src sh :tangle kc/1-contigs/canu/run.sh
PATH=$DIR/apps/canu-2.2/bin:$PATH

canu -p canu -d $DIR/kc/1-contigs/canu/ useGrid=true gridOptions=-Agbru_kokia \
     genomeSize=590m -nanopore $DIR/kc/combined.fq
  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/canu/canu.contigs.fasta")

  #+RESULTS:
  | n      |        3775 |
  | n:500  |        3775 |
  | L50    |         196 |
  | min    |        1240 |
  | N75    |      312249 |
  | N50    |      739053 |
  | N25    |     1433996 |
  | E-size |     1185320 |
  | max    |     8055587 |
  | sum    | 561600000.0 |
  | name   |     kc/canu |


#+begin_src sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity/3.7.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
        kc/1-contigs/shasta/Assembly.fasta \
        kc/1-contigs/canu/canu.contigs.fasta \
        kc/1-contigs/wtdbg2/dbg.raw.fa \
        kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa
#+end_src

|        |  shasta |      canu | wtdbg2    | *hifiasm* |
|--------+---------+-----------+-----------+---------|
| n      |    5477 |      3775 | 1312      |  *1159* |
| L50    |     859 |       196 | *44*      |     132 |
| min    |     503 |      1240 | 1335      |  *3607* |
| N75    |  101520 |    312249 | *1795357* |  636832 |
| N50    |  185196 |    739053 | *3228960* | 1248703 |
| N25    |  304546 |   1433996 | *6031992* | 2168255 |
| E-size |  225639 |   1185320 | *4064933* | 1546437 |
| max    | 1284992 |   8055587 | *11.86e6* | 5878698 |
| sum    | 519.5e6 | *561.6e6* | 492.7e6   | 544.6e6 |

#+begin_src sh
montage -geometry +0+0 kc/1-contigs/hifiasm.kirkii.png kc/wtdbg2.kirkii.png kc/1-contigs/dotplots.kirkii.png
#+end_src

#+RESULTS:

#+ATTR_ORG: :width 1000
[[./kc/1-contigs/dotplots.kirkii.png]]

Based on the number of contigs, the size of the assembly, and the dotplots, the
hifiasm looks to be the best out of the four.

** 2-polish
#+begin_src sh :tangle kc/2-polish/medaka.sh
ROOT=$(git rev-parse --show-toplevel)
export DIR ROOT

ml singularity/3.8.3

# clean up singularity medaka command. take the first element as subcommand,
# then remove it from stack. Pass the remaining stack to medaka cmd.
medaka () {
    cmd=medaka_$1
    shift;

    singularity exec -B $ROOT $DIR/apps/medaka_v1.7.1.sif $cmd $@;
}


medaka consensus -t 48 -m r104_e81_sup_g5015 \
    -i $DIR/kc/combined.fq \
    -d $DIR/kc/1-contigs/hifiasm/hifiasm.bp.p_ctg.fatest.p_ctg.fa \
    -o $DIR/kc/2-polish/
#+end_src

** 3-arrange
Orient and arrange using /Gossypium raimondii/, /G. herbaceum/, /G. hirsutum/
(following method in [fn:PMC6890844], updating genomes used)

- Download chromosomes from A1, D5, and AD1
   #+begin_src sh :tangle 0-ref/download.sh
URL=https://www.cottongen.org/cottongen_downloads
wget -O - --no-check \
    $URL/Gossypium_raimondii/BYU-Improved_G.raimondii/assembly/D5.v1.pred.fa.gz |
    zcat > $DIR/0-ref/D5.fa
wget -O - --no-check \
    $URL/Gossypium_herbaceum/A1_USDA/assembly/A1.wagad.fasta.gz \
    zcat > $DIR/0-ref/A1.fa
wget -O - --no-check \
    $URL/Gossypium_hirsutum/UTX-TM1_v2.1/assembly/Ghirsutum_527_v2.0.fa.gz |
    zcat |
    awk '/>scaffold/ { exit } 1;' > $DIR/0-ref/AD1.fa

   #+end_src
- Run initial scaffolding
  #+begin_src sh :tangle kc/3-arrange/1-run.sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity

ragtag () {
    singularity exec --no-home -B$ROOT \
        $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
        ragtag.py "$@"
}

for ref in A1 D5 AD1; do
    ragtag scaffold -r -u -t 48 -q60 -i 0.75 -o $DIR/kc/3-arrange/$ref \
        $DIR/0-ref/$ref.fa $DIR/kc/2-polish/consensus.fasta
done
  #+end_src

- Merge scaffolding
  #+begin_src sh :tangle kc/3-arrange/2-merge.sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity

ragtag () {
    singularity exec --no-home -B$ROOT \
        $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
        ragtag.py "$@"
}

ragtag merge --gap-func mean -o $DIR/kc/3-arrange/ \
    $DIR/kc/2-polish/consensus.fasta \
    $DIR/kc/3-arrange/{A1,D5,AD1}/ragtag.scaffold.agp
  #+end_src


  #+call: abyss-fac(genome="kc/3-arrange/ragtag.merge.fasta")

  #+RESULTS:
  |   n | n:500 | L50 |  min |     N75 |     N50 |        N25 |  E-size |        max |         sum | name                            |
  | 663 |   663 |  23 | 3604 | 3806832 | 8321904 | 11140000.0 | 8268079 | 21470000.0 | 544700000.0 | kc/3-arrange/ragtag.merge.fasta |

  #+call: dotplot-kirkii(genome="kc/2-arrange/ragtag.scaffold.fasta")

  #+ATTR_ORG: :width 750
  [[./kc/2-arrange/ragtag.scaffold.fasta.kirkii.png]]
** 4-gapfill
#+begin_src sh :tangle kc/4-gapfill/medaka.sh
ROOT=$(git rev-parse --show-toplevel)
export DIR ROOT

ml singularity/3.8.3

# clean up singularity medaka command. take the first element as subcommand,
# then remove it from stack. Pass the remaining stack to medaka cmd.
medaka () {
    cmd=medaka_$1
    shift;

    singularity exec -B $ROOT $DIR/apps/medaka_v1.7.1.sif $cmd $@;
}


medaka consensus -t 48 -m r104_e81_sup_g5015 \
    -i $DIR/kc/combined.fq \
    -d $DIR/kc/3-arrange/ragtag.merge.fasta \
    -o $DIR/kc/4-gapfill/
#+end_src

#+call: abyss-fac(genome="kc/4-gapfill/consensus.fasta")

#+RESULTS:
|   n | n:500 | L50 |  min |     N75 |     N50 |        N25 |  E-size |        max |         sum | name                         |
| 663 |   663 |  23 | 3603 | 3806925 | 8323802 | 11140000.0 | 8268147 | 21470000.0 | 544800000.0 | kc/4-gapfill/consensus.fasta |
** 5-scaffold
- Create bwa database for assembly
  #+begin_src sh :tangle kc/5-scaffolds/0-ref.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
fasta=$DIR/kc/4-gapfill/consensus.fasta
bwa index -a bwtsw $fasta
samtools faidx $fasta
  #+end_src
- Align Hi-C data to assembly
  #+header: :var data=../0-raw/readme.org:kc-hic
  #+begin_src sh :tangle kc/5-scaffolds/1-bwa.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $DIR/../0-raw/)

ml singularity
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
PATH=$PATH:$DIR/apps/samblaster-v.0.1.26/

fasta=$DIR/kc/4-gapfill/consensus.fasta
for name in "${!data[@]}"; do
    readarray -t libs <<< "${data[$name]}"

    bwa mem -5SP -t 48 $fasta $RAW/${libs[0]} $RAW/${libs[1]} |
        samblaster |
        samtools view -bS -F 2316 > $DIR/kc/5-scaffolds/$name.bam
done

  #+end_src

  | Pair Type           | Both Unmapped | Orphan/Singleton | Both Mapped |     Total |
  |---------------------+---------------+------------------+-------------+-----------|
  | Type_ID_Count       |      20394975 |          4006737 |   294601126 | 319002838 |
  | %Type/All_IDs       |         6.393 |            1.256 |      92.351 |   100.000 |
  | Dup_ID_Count        |             0 |          2728848 |   220847018 | 223575866 |
  | %Dups/Type_ID_Count |         0.000 |           68.106 |      74.965 |    70.086 |
  | %Dups/All_Dups      |         0.000 |            1.221 |      98.779 |   100.000 |
  | %Dups/All_IDs       |         0.000 |            0.855 |      69.230 |    70.086 |

   Marked 223575866 of 319002838 (70.086%) total read ids as duplicates using
  1741292k memory in 20M42S(1241.690S) CPU seconds and 1H45M18S(6318S) wall
  time.
- Convert bams to single bed
  #+header: :var data=../0-raw/readme.org:kc-hic[,0]
  #+begin_src sh :tangle kc/5-scaffolds/2-convert.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
bedtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bedtools/bedtools-2.28.0.sif bedtools $@
}

export ROOT DIR
export -f bedtools

parallel --eta bedtools bamtobed -i $DIR/kc/5-scaffolds/{}.bam \
    ::: "${data[@]}" > $DIR/kc/5-scaffolds/2-alignments.bed
  #+end_src
- Run SALSA
  #+begin_src sh :tangle kc/5-scaffolds/3-salsa/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
fasta=$DIR/kc/4-gapfill/consensus.fasta

singularity exec -B $ROOT $DIR/apps/salsa2_2.3--py27h16ec135_1.sif \
    run_pipeline.py \
    -i 15 \
    -a $fasta \
    -l $fasta.fai \
    -b $DIR/kc/5-scaffolds/2-alignments.bed \
    -e GATC \
    -s 590000000 \
    -o $DIR/kc/5-scaffolds/3-salsa/ \
    -p yes
  #+end_src

  #+begin_src shell
ml singularity

singularity exec -B $DIR \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
    $DIR/kc/4-gapfill/consensus.fasta \
    $DIR/kc/5-scaffolds/3-salsa/assembly.cleaned.fasta \
    $DIR/kc/5-scaffolds/3-salsa/scaffolds_ITERATION_*.fasta \
    $DIR/kc/5-scaffolds/3-salsa/scaffolds_FINAL.fasta


  #+end_src
  #+RESULTS:
  | name   | FINAL.fasta |    original | leaned.fasta | ITERATION_1.fasta | ITERATION_2.fasta | ITERATION_3.fasta | ITERATION_4.fasta | ITERATION_5.fasta | ITERATION_6.fasta |
  | n      |         497 |         663 |          742 |               590 |               550 |               525 |               508 |               497 |               495 |
  | n:500  |         497 |         663 |          742 |               590 |               550 |               525 |               508 |               497 |               495 |
  | L50    |          19 |          23 |           29 |                28 |                24 |                20 |                19 |                19 |                19 |
  | min    |        3603 |        3603 |         3603 |              3603 |              3603 |              3603 |              3603 |              3603 |              3603 |
  | N75    |     3506857 |     3806925 |      2132098 |           2535333 |           3415583 |           3415583 |           3474498 |           3506857 |           3506857 |
  | N50    |     8700255 |     8323802 |      5879451 |           6083096 |           7682295 |           7815923 |           8700255 |           8700255 |           8700255 |
  | N25    |  16040000.0 |  11140000.0 |   10380000.0 |        10450000.0 |        10980000.0 |        12920000.0 |        14470000.0 |        16040000.0 |        16040000.0 |
  | E-size |  11050000.0 |     8268147 |      6531792 |           6908418 |           8279370 |        10560000.0 |        10730000.0 |        11050000.0 |        11050000.0 |
  | max    |  37710000.0 |  21470000.0 |   17510000.0 |        17510000.0 |        29100000.0 |        35850000.0 |        35850000.0 |        37710000.0 |        37710000.0 |
  | sum    | 544800000.0 | 544800000.0 |  544800000.0 |       544800000.0 |       544800000.0 |       544800000.0 |       544800000.0 |       544800000.0 |       544800000.0 |

** 3-scaffolds
- Create bwa database for assembly
  #+begin_src sh :tangle kc/3-scaffolds/0-ref.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
fasta=$DIR/kc/2-polish/consensus.fasta
bwa index -a bwtsw $fasta
samtools faidx $fasta
  #+end_src
- Align Hi-C data to assembly
  #+header: :var data=../0-raw/readme.org:kc-hic
  #+begin_src sh :tangle kc/3-scaffolds/1-bwa.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $DIR/../0-raw/)

ml singularity
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
PATH=$PATH:$DIR/apps/samblaster-v.0.1.26/

fasta=$DIR/kc/2-polish/consensus.fasta
for name in "${!data[@]}"; do
    readarray -t libs <<< "${data[$name]}"

    bwa mem -5SP -t 48 $fasta $RAW/${libs[0]} $RAW/${libs[1]} |
        samblaster |
        samtools view -bS -F 2316 > $DIR/kc/3-scaffolds/$name.bam
done

  #+end_src


  | Pair Type        |     Count |       % |      Dups | %Dups/Type_ID_Count | %Dups/All_Dups | %Dups/All_IDs |
  |------------------+-----------+---------+-----------+---------------------+----------------+---------------|
  | Both Unmapped    |  20400099 |   6.395 |         0 |               0.000 |          0.000 |         0.000 |
  | Orphan/Singleton |   4044340 |   1.268 |   2750819 |              68.017 |          1.236 |         0.862 |
  | Both Mapped      | 294558399 |  92.337 | 219717370 |              74.592 |         98.764 |        68.876 |
  | Total            | 319002838 | 100.000 | 222468189 |              69.739 |        100.000 |        69.739 |

  Marked 222468189 of 319002838 (69.739%) total read ids as duplicates using
  1781960k memory in 20M54S(1253.883S) CPU seconds and 1H45M28S(6328S) wall
  time.


- Convert bams to single bed
  #+header: :var data=../0-raw/readme.org:kc-hic[,0]
  #+begin_src sh :tangle kc/3-scaffolds/2-convert.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
bedtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bedtools/bedtools-2.28.0.sif bedtools $@
}

export ROOT DIR
export -f bedtools

parallel --eta bedtools bamtobed -i $DIR/kc/3-scaffolds/{}.bam \
    ::: "${data[@]}" > $DIR/kc/3-scaffolds/2-alignments.bed
  #+end_src
- Run SALSA
  #+begin_src sh :tangle kc/3-scaffolds/3-salsa/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
fasta=$DIR/kc/2-polish/consensus.fasta

singularity exec -B $ROOT $DIR/apps/salsa2_2.3--py27h16ec135_1.sif \
    run_pipeline.py \
    -i 15 \
    -a $fasta \
    -l $fasta.fai \
    -b $DIR/kc/3-scaffolds/2-alignments.bed \
    -e GATC \
    -s 590000000 \
    -o $DIR/kc/3-scaffolds/3-salsa/ \
    -p yes
  #+end_src

  #+begin_src sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
    $DIR/kc/2-polish/consensus.fasta \
    $DIR/kc/3-scaffolds/3-salsa/scaffolds_ITERATION_*.fasta \
    $DIR/kc/3-scaffolds/3-salsa/scaffolds_FINAL.fasta


  #+end_src
  #+RESULTS:
  | name   | FINAL.fasta |    original | ITERATION_1.fasta | ITERATION_2.fasta | ITERATION_3.fasta | ITERATION_4.fasta | ITERATION_5.fasta | ITERATION_6.fasta |
  | n      |         737 |        1159 |               894 |               789 |               754 |               741 |               737 |               736 |
  | n:500  |         737 |        1159 |               894 |               789 |               754 |               741 |               737 |               736 |
  | L50    |          56 |         132 |               106 |                75 |                61 |                57 |                56 |                56 |
  | min    |        3604 |        3604 |              3604 |              3604 |              3604 |              3604 |              3604 |              3604 |
  | N75    |      940582 |      636974 |            754651 |            911654 |            937824 |            940582 |            940582 |            940582 |
  | N50    |     2106056 |     1248713 |           1423432 |           1762657 |           2079053 |           2106056 |           2106056 |           2106056 |
  | N25    |     5566932 |     2169096 |           2647653 |           3731325 |           5309613 |           5566932 |           5566932 |           5566932 |
  | E-size |     4529403 |     1546714 |           1938599 |           2829549 |           3676764 |           4266130 |           4529403 |           4529519 |
  | max    |  22920000.0 |     5879258 |           5935774 |        12340000.0 |        20720000.0 |        22920000.0 |        22920000.0 |        22920000.0 |
  | sum    | 544700000.0 | 544700000.0 |       544700000.0 |       544700000.0 |       544700000.0 |       544700000.0 |       544700000.0 |       544700000.0 |
- dotplot against kirkii

  #+begin_src sh
ml minimap2/2.17 r/4.0.25

cd $DIR/kd/

minimap2 -x asm5 -t 20 \
    $DIR/0-ref/kirkii.fa $DIR/kd/2-hic/4-salsa/scaffolds_ITERATION_4.fasta \
    > $DIR/kd/hic.kirkii.paf

Rscript $DIR/apps/dotplots/pafCoordsDotPlotly.R -i $DIR/kd/hic.kirkii.paf \
    -o hic.kirkii -m 20000 -x -s -t -l -p 12
  #+end_src
** 4-gapfill
https://github.com/schmeing/gapless
#+begin_src sh :tangle kc/4-gapfill/run.sh
PATH=$PATH:$DIR/apps/gapless/

ml python/3.9.2 minimap2/2.17 zlib/1.2.11
PATH=$PATH:$DIR/apps/seqtk/:$DIR/apps/racon/build/bin

cd $DIR/kc/4-gapfill/

$DIR/apps/gapless/gapless.sh -j 30 \
    -i $DIR/kc/3-scaffolds/3-salsa/scaffolds_FINAL.fasta \
    -t nanopore $DIR/kc/combined.fq
#+end_src

#+begin_src shell
ml singularity

singularity exec -B $DIR \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
        $DIR/kc/4-gapfill/gapless_run/*/gapless.fa
#+end_src

#+RESULTS:


* Scaffolding
#+name: polished-genomes
| Name | Polsihed Genomes                             |
|------+----------------------------------------------|
| Kc   | Kokia_cookei_C69/2-polish/consensus.fasta    |
| Kk   | Kokia_kauaiensis_S9/2-polish/consensus.fasta |

#+name: hic
| Name | Forward                                              | Reverse                                              |
|------+------------------------------------------------------+------------------------------------------------------|
| Kc   | Kc/hi-c/Kc_HiC_CKDL220020122-1A_HCWYNDSX5_L1_1.fq.gz | Kc/hi-c/Kc_HiC_CKDL220020122-1A_HCWYNDSX5_L1_2.fq.gz |
| Kk   | Kk/hi-c/Kk_HiC_CKDL220020123-1A_HCWYNDSX5_L1_1.fq.gz | Kk/hi-c/Kk_HiC_CKDL220020123-1A_HCWYNDSX5_L1_2.fq.gz |

| Kd   | kd/hi-c/kokia_S3HiC_R1.fastq.gz                      | kd/hi-c/kokia_S3HiC_R2.fastq.gz                      |

- Create bwa database for assembly
  #+header: :var genomes=polished-genomes
  #+begin_src sh :tangle 3-scaffolding/0-db/run.sh
    ROOT=$(git rev-parse --show-toplevel)
    PATH=$DIR/apps/bwa-0.7.17:$PATH

    line=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")
    read name fasta <<<"$line"

    bwa index -a bwtsw -p $DIR/3-scaffolding/0-db/$name $DIR/$fasta
  #+end_src

- Align Hi-C data to assembly
  #+header: :var data=hic
  #+begin_src sh :tangle 3-scaffolding/1-bwa/run.sh
    ROOT=$(git rev-parse --show-toplevel)
    RAW=$(realpath $ROOT/wgs/0-raw/)

    PATH=$DIR/apps/bwa-0.7.17:$PATH
    PATH=$DIR/apps/samtools-1.17/bin:$PATH
    PATH=$PATH:$DIR/apps/samblaster-v.0.1.26/

    line=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$data")
    read name fwd rev <<<"$line"

    bwa mem -5SP -t 48 $DIR/3-scaffolding/0-db/$name $RAW/$fwd $RAW/$rev |
        samblaster |
        samtools view -bS -F 2316 |
        samtools sort -m 60G -o $DIR/3-scaffolding/1-bwa/$name.bam

    samtools index $DIR/3-scaffolding/1-bwa/$name.bam
  #+end_src

- Run yahs
  #+header: :var genomes=polished-genomes
  #+begin_src sh :tangle 3-scaffolding/2-yahs/run.sh
    ROOT=$(git rev-parse --show-toplevel)
    PATH=$DIR/apps/yahs/:$PATH

    line=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")
    read name fasta <<<"$line"

    yahs $DIR/$fasta $DIR/3-scaffolding/1-bwa/$name.bam \
         -o $DIR/3-scaffolding/2-yahs/$name
  #+end_src

** Splitting combined chrs
Based on the dotplot to kirkii, scaffold_1 for both Kc and Kk and
scaffold_2 and scaffold_7 in Kc contain multiple chrs. Using hic
contact map to split those scaffolds.

- Get regions
  #+begin_src sh :tangle 3-scaffolding/3-split/get-regions.sh
    for name in Kc Kk; do
        awk '$1 == "scaffold_1" && $5 == "W" {printf "%s:%d-%d\n", $6, $7, $8}' \
            3-scaffolding/2-yahs/${name}_scaffolds_final.agp \
            > 3-scaffolding/3-split/$name.scaff1.regions
    done

    name=Kc
    awk '$1 == "scaffold_2" && $5 == "W" {printf "%s:%d-%d\n", $6, $7, $8}' \
        3-scaffolding/2-yahs/${name}_scaffolds_final.agp \
        > 3-scaffolding/3-split/$name.scaff2.regions

    name=Kc
    awk '$1 == "scaffold_7" && $5 == "W" {printf "%s:%d-%d\n", $6, $7, $8}' \
        3-scaffolding/2-yahs/${name}_scaffolds_final.agp \
        > 3-scaffolding/3-split/$name.scaff7.regions

  #+end_src
- Plot
  #+begin_src tmux :session kokia:atlas
    ml gd/

#    for scaff in Kk.scaff1 Kc.scaff1 Kc.scaff2 Kc.scaff7; do
    for scaff in Kc.scaff7; do
        name=${scaff:0:2}
        $DIR/apps/hic-viz/hic-viz -m 600 -b 300 -s 5 \
                                  -r $DIR/3-scaffolding/3-split/$scaff.regions \
                                  $DIR/3-scaffolding/1-bwa/$name.bam \
                                  > $DIR/3-scaffolding/3-split/$scaff.png

    done
  #+end_src
- split scaffolds
  #+begin_src tmux :session kokia:atlas
    ml python

    awk '$1 == "scaffold_1" && $6 == "ptg000024l" && $7==1 ;
         $1 == "scaffold_1" && $6 == "ptg000120l" && $7==1 ;
         $1 == "scaffold_1" && $6 == "ptg000004l" && $7==4001 ;
         $1 == "scaffold_1" && $6 == "ptg000153l" && $7==375001 ;
         $1 == "scaffold_1" && $6 == "ptg000592l" && $7==8001 ;
         $1 == "scaffold_2" && $6 == "ptg000137l" && $7==1 ; 
         $1 == "scaffold_2" && $6 == "ptg000330l" && $7==1
         $1 == "scaffold_7" && $6 == "ptg000740l" && $7==11001
         $1 == "scaffold_7" && $6 == "ptg000242l" && $7==1
         $1 == "scaffold_7" && $6 == "ptg000337l" && $7==3001
         $1 == "scaffold_7" && $6 == "ptg000285l" && $7==1041001
         ' \
             FS="\t" OFS="\t" \
             $DIR/3-scaffolding/2-yahs/Kc_scaffolds_final.agp |
        awk '{_[$1] = _[$1] "," ($2-1)}
             END {for( i in _ ) {
                     sub("^,", "", _[i]);
                     print i, _[i]
                     }}' OFS="\t" |
        agptools split /dev/stdin \
                 $DIR/3-scaffolding/2-yahs/Kc_scaffolds_final.agp \
                 > $DIR/3-scaffolding/Kc.agp


    awk '$1 == "scaffold_1" && $6 == "ptg000053l" && $7==1 ;' \
        $DIR/3-scaffolding/2-yahs/Kk_scaffolds_final.agp |
        awk '{_[$1] = _[$1] "," ($2-1)}
             END {for( i in _ ) {
                     sub("^,", "", _[i]);
                     print i, _[i]
                     }}' OFS="\t" |
        agptools split /dev/stdin \
                 $DIR/3-scaffolding/2-yahs/Kk_scaffolds_final.agp \
                 > $DIR/3-scaffolding/Kk.agp
        

  #+end_src
- make fasta
  #+header: :var genomes=polished-genomes
  #+begin_src sh :tangle 3-scaffolding/4-compile.sh
    ml python

    cat  <<<"$genomes" |
        while read name fasta; do
            agptools assemble $DIR/$fasta \
                     $DIR/3-scaffolding/$name.agp \
                     > $DIR/3-scaffolding/$name.fa
        done
  #+end_src
  
* Arrange

- Align to kirkii
  #+header: :var genomes=polished-genomes[,0]
  #+begin_src sh :tangle 4-arrange/1-align.sh
    ml minimap2/2.17

    name=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")
    
    minimap2 -x asm5 -t 48 \
        $DIR/0-ref/kirkii.fa \
        $DIR/3-scaffolding/$name.fa \
        > $DIR/4-arrange/$name.paf
         #+end_src
- Dotplot
  #+header: :var genomes=polished-genomes[,0]
  #+begin_src sh :tangle 4-arrange/2-plot.sh
  name=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")
  cd $DIR/4-arrange
  Rscript $DIR/apps/pafCoordsDotPlotly.R \
       -i $DIR/4-arrange/$name.paf \
       -o $name \
       -m 20000 \
       -p 12 \
       -x -s -t -l
  #+end_src
- Orient and arrange using kirkii
  #+header: :var genomes=polished-genomes[,0]
  #+begin_src sh :tangle 4-arrange/3-ragtag/run.sh
    ROOT=$(git rev-parse --show-toplevel)
    name=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")
    ml singularity

    ragtag () {
        singularity exec --no-home -B$ROOT \
                    $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
                    ragtag.py "$@"
        
    }

    ragtag scaffold -t 48 -q 60 -i 0.75 \
           -o $DIR/4-arrange/3-ragtag/$name \
           $DIR/0-ref/kirkii.fa \
           $DIR/3-scaffolding/$name.fa
  #+end_src

- Join yahs scaffolds based on ragtag arrangment
  #+header: :var genomes=polished-genomes[,0]
    #+begin_src sh :tangle 4-arrange/4-forward.sh
    ml python
    name=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")

    awk '$5 == "W" { _[$1] = _[$1] "," $9 $6; }
             END {for( i in _ ) {
                     sub("^,", "", _[i]);
                     print _[i], i;
                     }}' OFS="\t" \
                         $DIR/4-arrange/3-ragtag/$name/ragtag.scaffold.agp |
        sed  -e "s/KI_/${name}_/" -e "s/_RagTag//"|
        sort -k2,2 |
        agptools join -n 100 -t scaffold -e align_xgenus \
                 /dev/stdin $DIR/3-scaffolding/$name.agp \
                 > $DIR/4-arrange/$name.agp
          #+end_src
* Curate

- Plot
    #+begin_src sh :tangle 5-curate/plot.sh
      PATH=$DIR/apps/hic-viz/:$PATH
      PATH=$DIR/apps/agp-curator/:$PATH

      scaff=$1
      name=${scaff:0:2}

      if [ ! -e $DIR/4-arrange/$name.$scaff.png ]; then
          awk '$1 == chr && $5 == "W" {
                  sub("+", "", $9);
                  printf "%s%s:%d-%d\n", $9, $6, $7, $8
                          }' chr=$scaff $DIR/4-arrange/$name.agp |
              hic-viz -m 600 -b 300 -s 8 -r /dev/stdin  \
                      -f /usr/share/fonts/dejavu-sans-fonts/DejaVuSans.ttf \
                      -o $DIR/4-arrange/$name.$scaff.png \
                      $DIR/3-scaffolding/1-bwa/$name.bam
      fi

      magpie $DIR/5-curate/$name.magpie \
             $DIR/4-arrange/$name.agp \
             > $DIR/5-curate/$name.agp
      awk '$1 == chr && $5 == "W" {
              sub("+", "", $9);
              printf "%s%s:%d-%d\n", $9, $6, $7, $8
              }' chr=$scaff $DIR/5-curate/$name.agp |
          hic-viz -m 600 -b 300 -s 8 -r /dev/stdin  \
                  -f /usr/share/fonts/dejavu-sans-fonts/DejaVuSans.ttf \
                  -o $DIR/5-curate/$name.$scaff.png \
                  $DIR/3-scaffolding/1-bwa/$name.bam

  #+end_src
- Assemble and align curated genomes to kirkii
  #+header: :var genomes=polished-genomes[,0]
    #+begin_src sh :tangle 5-curate/dotplot.sh
    ml python  minimap2/2.14
    DIR=/home/maa146/Projects/Kokia/wgs/1-assembly

    name=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")

    ~/.local/bin/agptools assemble \
                          $DIR/2-polish/$name.fa \
                          $DIR/5-curate/$name.agp \
                          > $DIR/5-curate/$name.fa

    minimap2 -x asm5 \
             $DIR/0-ref/kirkii.fa.gz \
             $DIR/5-curate/$name.fa \
             > $DIR/5-curate/$name.paf

    cd $DIR/5-curate    

    Rscript $DIR/apps/pafCoordsDotPlotly.R \
            -i $DIR/5-curate/$name.paf \
            -o $name \
            -m 20000 \
            -p 20 \
            -x -s -t -l
  #+end_src
** Hic
- Align hic to curated genomes
  - Create bwa database for assembly
      #+header: :var genomes=polished-genomes[,0]
    #+begin_src sh :tangle 5-curate/hic/0-db/run.sh
         ml python
         ROOT=$(git rev-parse --show-toplevel)
         PATH=$DIR/apps/bwa-0.7.17:$PATH
         PATH=$DIR/apps/agp-curator/:$PATH

         name=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$genomes")

         magpie $DIR/5-curate/$name.magpie \
                $DIR/4-arrange/$name.agp \
                > $DIR/5-curate/$name.agp

         agptools assemble \
                  $DIR/2-polish/$name.fa \
                  $DIR/5-curate/$name.agp \
                  > $DIR/5-curate/$name.fa

         bwa index -a bwtsw \
             -p $DIR/5-curate/hic/0-db/$name \
              $DIR/5-curate/$name.fa
    #+end_src

  - Align Hi-C data to assembly
    #+header: :var data=hic
    #+begin_src sh :tangle 5-curate/hic/1-bwa/run.sh
      ROOT=$(git rev-parse --show-toplevel)
      RAW=$(realpath $ROOT/wgs/0-raw/)

      PATH=$DIR/apps/bwa-0.7.17:$PATH
      PATH=$DIR/apps/samtools-1.17/bin:$PATH
      PATH=$PATH:$DIR/apps/samblaster-v.0.1.26/

      line=$(sed -n ${SLURM_ARRAY_TASK_ID}p <<<"$data")
      read name fwd rev <<<"$line"

      bwa mem -5SP -t 48 \
          $DIR/5-curate/hic/0-db/$name $RAW/$fwd $RAW/$rev |
          samblaster |
          samtools view -bS -F 2316 |
          samtools sort -m 60G \
                   -o $DIR/5-curate/hic/1-bwa/$name.bam

      samtools index $DIR/5-curate/hic/1-bwa/$name.bam
    #+end_src


** Finialize

yahs split some contigs that are now adjacent in the agp file. Finding
and combining all those to reduce gaps.

#+header: :var genomes=polished-genomes[,0]
#+begin_src sh :tangle 5-curate/99-final.sh
  DIR=.
  ml python
  PATH=$DIR/apps/agp-curator/:~/.local/bin:$PATH

  cat <<<"$genomes" |
      while read name; do
          magpie --simplify \
                 $DIR/5-curate/$name.magpie \
                 $DIR/4-arrange/$name.agp \
                 > $DIR/5-curate/$name.agp

          agptools assemble \
                   $DIR/2-polish/$name.fa \
                   $DIR/5-curate/$name.agp |
              gzip > $DIR/5-curate/$name.fa.gz
      done
#+end_src

*** Kd
Kd was curated manually. Only thing needed is to orient chrs based on
kirkii
#+begin_src sh  :tangle 5-curate/99-final.kd.sh
    DIR=.

    PATH=$DIR/apps/samtools-1.17/:$PATH

    Kd=$DIR/Kokia_drynarioides_JFW-HI/Kokia_drynarioides.fasta
    #  minimap2 -x asm5 $DIR/0-ref/kirkii.fa.gz $Kd |
    cat $DIR/5-curate/Kd.paf |
          awk '$11 >= 100000 {
             i = 1;
             if($5 == "-") i = -1;
             _[$1] += i; }
           END{for(i in _) print i, _[i];}' OFS="\t" |
          while read chr dir; do
              flags="--mark-strand no"
              if [ $dir -lt 0 ]; then
                  flags="-i $flags"
              fi

              samtools faidx $flags $Kd $chr
          done |
          gzip > $DIR/5-curate/Kd.fa.gz
#+end_src
