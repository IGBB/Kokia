#+TITLE: Assembly
#+PROPERTY:  header-args :var DIR=(file-name-directory (file-local-name buffer-file-name))

#+name: transpose
#+header: table=""
#+begin_src elisp
(org-table-transpose-table-at-point table)
#+end_src

* Kokia drynarioides JFW-HI

** Contigs
- Remove lambda and remove reads shorter than 4kb from nanopore data
  #+header: :var runs=../0-raw/readme.org:kd-nanopore-runs[,1]
  #+begin_src sh :tangle kd/1-trim.sh
RAW=$(realpath $DIR/../0-raw/)

printf "$RAW/%s/fastq_pass.fq.gz\n" "${runs[@]}" |
    xargs $DIR/apps/devour -t 20 -l 4000 |
    gzip > kd/clean.fq.gz
  #+end_src
- Assemble contigs using canu
  #+begin_src sh :tangle kd/2-canu.sh
ml canu/2.1
canu \
    -p canu -d $DIR/kd \
    genomeSize=590m \
    gridOptions="-A191400-327070 --time=48:00:00" \
    useGrid=true \
    -nanopore $DIR/kd/clean.fq.gz


  #+end_src

  |        | canu/2.1 |
  |--------+----------|
  | n      |     2264 |
  | n:500  |     2264 |
  | L50    |       54 |
  | min    |     1197 |
  | N75    |  1201645 |
  | N50    |  2757100 |
  | N25    |  4885516 |
  | E-size |  4190213 |
  | max    |  22.95e6 |
  | sum    |  551.1e6 |
- clean canu directory
  #+begin_src sh
pushd $DIR/kd
rm -fr canu-logs/ \
    canu-scripts/ \
    canu.seqStore/ \
    correction/ \
    trimming/ \
    unitigging/ \
    canu.out

gzip *.fasta canu.contigs.layout.*

git add canu.report canu.seqStore.err

git annex add canu.contigs.fasta.gz \
    canu.contigs.layout.readToTig.gz \
    canu.contigs.layout.tigInfo.gz \
    canu.correctedReads.fasta.gz \
    canu.trimmedReads.fasta.gz \
    canu.unassembled.fasta.gz

#+end_src
- dotplot against kirkii

  #+begin_src sh
ml minimap2/2.17 r/4.0.2

minimap2 -x asm5 -t 20 \
    $DIR/0-ref/kirkii.fa $DIR/kd/canu.contigs.fasta \
    > $DIR/kd/canu.kirkii.paf

cd $DIR/kd
Rscript $DIR/apps/dotplots/pafCoordsDotPlotly.R -i canu.kirkii.paf \
    -o canu.kirkii -m 20000 -x -s -t -l -p 12
  #+end_src

** Hi-C Scaffolding
- Create bwa database for assembly
  #+begin_src sh :tangle kd/2-hic/0-ref/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}

bwa index -a bwtsw -p $DIR/kd/2-hic/0-ref/kd.bwa $DIR/kd/canu.contigs.fasta
samtools faidx $DIR/kd/canu.contigs.fasta
  #+end_src
- Align Hi-C data to assembly
  #+header: :var data=../0-raw/readme.org:kd-hic
  #+begin_src sh :tangle kd/2-hic/1-bwa/run.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $DIR/../0-raw/)

ml singularity/3.7.3
bwa () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bwa/bwa-0.7.17.sif bwa $@
}
samtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/samtools/samtools-v1.9-4-deb_cv1.sif \
        samtools $@
}
PATH=$PATH:$DIR/apps/samblaster

for name in "${!data[@]}"; do
    readarray -t libs <<< "${data[$name]}"

    bwa mem -5SP -t 24 $DIR/kd/2-hic/0-ref/kd.bwa $RAW/${libs[0]} $RAW/${libs[1]} |
        samblaster |
        samtools view -bS -F 2316 > $DIR/kd/2-hic/1-bwa/$name.bam
done

  #+end_src

- Validate libraries
  #+header: :var data=../0-raw/readme.org:kd-hic
  #+begin_src sh :tangle 2-hic/2-qc/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml python/3.9.2
export PYTHONPATH=$PYTHONPATH:~/.local/lib/python3.9/site-packages/
source $DIR/apps/hic_qc/bin/activate

for name in "${!data[@]}"; do
    $DIR/apps/hic_qc/hic_qc.py \
        -b $DIR/2-hic/1-bwa/$name.bam \
        -o $DIR/2-hic/2-qc/$name \
        --lib_enzyme GATC
done

  #+end_src

- Convert bams to single bed
  #+header: :var data=../0-raw/readme.org:kd-hic[,0]
  #+begin_src sh :tangle kd/2-hic/3-convert.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3
bedtools () {
    singularity exec -B $ROOT \
        /apps/singularity-3/bedtools/bedtools-2.28.0.sif bedtools $@
}

export ROOT DIR
export -f bedtools

parallel --eta bedtools bamtobed -i $DIR/kd/2-hic/1-bwa/{}.bam \
    ::: "${data[@]}" > $DIR/kd/2-hic/3-alignments.bed
  #+end_src
- Run SALSA
  #+begin_src sh :tangle kd/2-hic/4-salsa/run.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3

singularity exec -B $ROOT $DIR/apps/salsa2_2.3--py27h16ec135_1.sif \
    run_pipeline.py \
    -i 15 \
    -a $DIR/kd/canu.contigs.fasta \
    -l $DIR/kd/canu.contigs.fasta.fai \
    -b $DIR/kd/2-hic/3-alignments.bed \
    -e GATC \
    -s 590000000 \
    -o $DIR/kd/2-hic/4-salsa/ \
    -p yes
  #+end_src

  #+begin_src sh :tangle kd/2-hic/4-salsa/stat.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity/3.7.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
    $DIR/kd/2-hic/4-salsa/scaffolds_ITERATION_*.fasta \
    $DIR/kd/2-hic/4-salsa/scaffolds_FINAL.fasta 
    

  #+end_src

  #+RESULTS:
  |    n | n:500 | L50 |  min |     N75 |     N50 |     N25 |  E-size |        max |         sum |  name |
  | 1832 |  1832 |  48 | 1197 | 1337726 | 3293652 | 5573229 | 4604924 | 22950000.0 | 551100000.0 |     1 |
  | 1663 |  1663 |  46 | 1197 | 1455819 | 3362451 | 6249823 | 4727382 | 22950000.0 | 551100000.0 |     2 |
  | 1596 |  1596 |  45 | 1197 | 1680764 | 3702737 | 6262271 | 4841897 | 22950000.0 | 551100000.0 |     3 |
  | 1571 |  1571 |  43 | 1197 | 1722624 | 3786187 | 6299587 | 4959276 | 22950000.0 | 551100000.0 |     4 |
  | 1596 |  1596 |  45 | 1197 | 1680764 | 3702737 | 6262271 | 4841897 | 22950000.0 | 551100000.0 | FINAL |


- dotplot against kirkii

  #+begin_src sh
ml minimap2/2.17 r/4.0.25

cd $DIR/kd/

minimap2 -x asm5 -t 20 \
    $DIR/0-ref/kirkii.fa $DIR/kd/2-hic/4-salsa/scaffolds_ITERATION_4.fasta \
    > $DIR/kd/hic.kirkii.paf

Rscript $DIR/apps/dotplots/pafCoordsDotPlotly.R -i $DIR/kd/hic.kirkii.paf \
    -o hic.kirkii -m 20000 -x -s -t -l -p 12
  #+end_src
** Arrange/Orient
- Orient and arrange using /Gossipiodes kirkii/
  #+begin_src sh :tangle kd/3-ragtag/run.sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity

ragtag () {
    singularity exec --no-home -B$ROOT \
        $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
        ragtag.py "$@"

}

ragtag scaffold -u -t 48 -q 60 -o $DIR/kd/3-ragtag/ -i 0.75  \
    $DIR/0-ref/kirkii.fa $DIR/kd/canu.contigs.fasta
  #+end_src

#+CALL: apps/dotplots.org:dotplot()

#+RESULTS:
: /project/90daydata/gbru_kokia/Kokia/wgs/1-assembly/

** sup model

Using the 'Nanopore flip-flop R9.4 or R10.3' settings because of the reduced
error rate for the latest basecalling data.

#+begin_src sh :tangle kd.sup/run.sh
RAW=$(realpath $DIR/../0-raw/)
PATH=$DIR/apps/canu-2.2/bin:$PATH

canu \
    -p canu -d $DIR/kd.sup \
    genomeSize=590m \
    gridOptions="-Acotton_genomics" \
    useGrid=true \
    corMhapOptions='--threshold 0.8 --ordered-sketch-size 1000 --ordered-kmer-size 14' \
    correctedErrorRate=0.105 \
    -nanopore $RAW/*/sup.pass.fq.gz


#+end_src

| n      |               2365 |
| n:500  |               2365 |
| L50    |                 89 |
| min    |               1206 |
| N75    |             755687 |
| N50    |            1659488 |
| N25    |            3113363 |
| E-size |            2550534 |
| max    |            11.36e6 |
| sum    |            552.8e6 |
| name   | canu.contigs.fasta |

- Clean canu directory (see previous)


* Kokia kauaiensis S9


** 1-contigs
#+header: :var runs=../0-raw/readme.org:kk-nanopore-sup[,1]
#+begin_src sh :tangle kk/combine.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $ROOT/0-raw/)

for file in "${runs[@]}"; do
      tar -Oxf $ROOT/wgs/0-raw/$file
done |
    zcat -f > $DIR/kk/combined.fq
#+end_src

- shasta

  #+begin_src sh :tangle kk/1-contigs/shasta.sh
ROOT=$(git rev-parse --show-toplevel)

$DIR/apps/shasta-0.10.0 \
    --input $DIR/kk/combined.fq \
    --threads 48 \
    --config Nanopore-May2022 \
    --assemblyDirectory $DIR/kk/1-contigs/shasta/
  #+end_src

  #+name: abyss-fac
  #+header: :var genome="kk/1-contigs/shasta/Assembly.fasta"
  #+begin_src sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity/3.8.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac $genome
  #+end_src

  #+RESULTS: abyss-fac
  | n      |       13671 |
  | n:500  |       13501 |
  | L50    |        2894 |
  | min    |         507 |
  | N75    |       17224 |
  | N50    |       29894 |
  | N25    |       48305 |
  | E-size |       36036 |
  | max    |      238763 |
  | sum    | 277400000.0 |
  | name   |   kk/shasta |

- hifiasm
#+begin_src sh :tangle kk/1-contigs/hifiasm.sh
PATH=$DIR/apps/hifiasm-0.16.1/:$PATH

hifiasm -t 48 -o $DIR/kk/1-contigs/hifiasm $DIR/kk/combined.fq
awk '/^S/{print ">"$2;print $3}' $DIR/kk/1-contigs/hifiasm.bp.p_ctg.gfa \
    > $DIR/kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa
#+end_src

#+call: abyss-fac(genome="kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa")

#+RESULTS:
| n      |        2625 |
| n:500  |        2625 |
| L50    |         297 |
| min    |        3598 |
| N75    |      213535 |
| N50    |      483159 |
| N25    |      906223 |
| E-size |      721462 |
| max    |     4146154 |
| sum    | 536100000.0 |
| name   |  kk/hifiasm |

- dotplot against kirkii

  #+call: dotplot-kirkii(genome="kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa")

  #+ATTR_ORG: :width 750
  [[./kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa.kirkii.png]]
- wtdbg2

  Assemble with wtdbg2 PacBio CCS reads look to have a similar error rate to the
  latest nanopore basecalling model, sup. Trying those presets.
  #+begin_src sh :tangle kk/1-contigs/wtdbg2/run.sh
PATH=$DIR/apps/wtdbg-2.5_x64_linux/:$PATH

cd $DIR/kk/1-contigs/wtdbg2/
wtdbg2 -x ccs -g 590m -i $DIR/kk/combined.fq -t 48 -fo dbg

# derive consensus
wtpoa-cns -t 48 -i dbg.ctg.lay.gz -fo dbg.raw.fa


  #+end_src

  - Assembly Stats
  #+call: abyss-fac(genome="kk/1-contigs/wtdbg2/dbg.raw.fa")

  #+RESULTS:
  | n      |         710 |
  | n:500  |         710 |
  | L50    |          50 |
  | min    |        2261 |
  | N75    |     1590418 |
  | N50    |     2861231 |
  | N25    |     5194771 |
  | E-size |     3637209 |
  | max    |  13440000.0 |
  | sum    | 489400000.0 |

  - dotplot against kirkii

   #+call: dotplot-kirkii(genome="kk/1-contigs/wtdbg2/dbg.raw.fa")

   #+ATTR_ORG: :width 750
    [[./kk/1-contigs/wtdbg2/dbg.raw.fa.kirkii.png]]
- canu

  #+begin_src sh :tangle kk/1-contigs/canu/run.sh
PATH=$DIR/apps/canu-2.2/bin:$PATH

canu -p canu -d $DIR/kk/1-contigs/canu/ useGrid=true gridOptions=-Agbru_kokia \
     genomeSize=590m -nanopore $DIR/kk/combined.fq
  #+end_src

  #+call: abyss-fac(genome="kk/1-contigs/canu/canu.contigs.fasta")

  #+RESULTS:
  | n      |        8047 |
  | n:500  |        8047 |
  | L50    |         521 |
  | min    |        1114 |
  | N75    |      103348 |
  | N50    |      280353 |
  | N25    |      572593 |
  | E-size |      530926 |
  | max    |     7688614 |
  | sum    | 583800000.0 |
  | name   |    kk/canu/ |

- flye

modified =Flye/flye/config/bin_cfg/asm_nano_hq.cfg= based on the following quote provided by Tony from [[https://community.nanoporetech.com/docs/plan/best_practice/kit-14-device-and-informatics/v/k14_s1019_v1_revg_29jun2022][here]]

#+begin_quote
Configuring the command line parameter --min-overlap 10000 should deliver a modest improvement in assembly contiguity when using libraries optimised for read length.
It is recommended that the --nano-corr parameter is set (to specify that the sequences are "corrected"). This provides a significant improvement to assembly NG50 compared to when the --nano-raw (uncorrected sequence) setting is used. We have observed NG50 increases from 58 Mb to 67 Mb for collapsed assemblies, when assembling both haplotypes at once.
We typically adjust the "asm_corrected_reads.cfg file in the flye/config/bin_cfg/ folder to increase haplotype-specific assembly NG50s and to remove any major misjoins.
a. enable homopolymer compressed scoring (hpc_scoring_on = 1)
b. increase the minimizer_window to 10
c. decrease the repeat_graph_ovlp_divergence to 0.005 increases haplotype-specific assembly NG50s to 84 Mb/84 Mb and removes all major misjoins
#+end_quote

  #+begin_src shell :tangle kk/1-contigs/flye/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-hq $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye/ \
        -t 40
  #+end_src

    #+begin_src shell :tangle kk/1-contigs/flye_polish_10/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-hq $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye_polish_10/ \
        -i 10 \
        -t 20
  #+end_src

  #+call: abyss-fac(genome="kk/1-contigs/flye/assembly.fasta")

  #+RESULTS:
  | n      |                             7831 |
  | n:500  |                             7830 |
  | L50    |                             1455 |
  | min    |                              528 |
  | N75    |                            59817 |
  | N50    |                           112586 |
  | N25    |                           192405 |
  | E-size |                           139951 |
  | max    |                           721500 |
  | sum    |                      547000000.0 |
  | name   | kk/1-contigs/flye/assembly.fasta |


modified =Flye/flye/config/bin_cfg/asm_corrected_reads.cfg= based on the following quote provided by Tony from [[https://community.nanoporetech.com/docs/plan/best_practice/kit-14-device-and-informatics/v/k14_s1019_v1_revg_29jun2022][here]]

#+begin_quote
Configuring the command line parameter --min-overlap 10000 should deliver a modest improvement in assembly contiguity when using libraries optimised for read length.
It is recommended that the --nano-corr parameter is set (to specify that the sequences are "corrected"). This provides a significant improvement to assembly NG50 compared to when the --nano-raw (uncorrected sequence) setting is used. We have observed NG50 increases from 58 Mb to 67 Mb for collapsed assemblies, when assembling both haplotypes at once.
We typically adjust the "asm_corrected_reads.cfg file in the flye/config/bin_cfg/ folder to increase haplotype-specific assembly NG50s and to remove any major misjoins.
a. enable homopolymer compressed scoring (hpc_scoring_on = 1)
b. increase the minimizer_window to 10
c. decrease the repeat_graph_ovlp_divergence to 0.005 increases haplotype-specific assembly NG50s to 84 Mb/84 Mb and removes all major misjoins
#+end_quote

  #+begin_src shell :tangle kk/1-contigs/flye_corr/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-corr $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye_corr/ \
        -t 40
  #+end_src

    #+begin_src shell :tangle kk/1-contigs/flye_corr_polish_10/run.sh
ml python/3.9.2
python3 $DIR/apps/Flye/bin/flye \
        --nano-corr $DIR/kk/combined.fq \
        --min-overlap 10000 \
        -o $DIR/kk/1-contigs/flye_corr_polish_10/ \
        -i 10 \
        -t 20
  #+end_src

  #+call: abyss-fac(genome="kk/1-contigs/flye_corr/assembly.fasta")

  #+RESULTS:
  | n      |                                  6994 |
  | n:500  |                                  6992 |
  | L50    |                                  1282 |
  | min    |                                   508 |
  | N75    |                                 66664 |
  | N50    |                                124051 |
  | N25    |                                214308 |
  | E-size |                                155190 |
  | max    |                                835109 |
  | sum    |                           534400000.0 |
  | name   | kk/1-contigs/flye_corr/assembly.fasta |

- hifiasm + hic phasing

  #+begin_src sh :tangle 1-contigs/hifiasm.phase/run.sh
PATH=$DIR/apps/hifiasm/:$PATH

hifiasm -t 48 -o $DIR/1-contigs/hifiasm.phase/genome \
    --h1 $DIR/hic-1.fq.gz --h2 $DIR/hic-2.fq.gz \
    $DIR/kk/combined.fq
  #+end_src

  - stats for all steps of assembly
    #+begin_src sh :tangle 1-contigs/hifiasm.phase/stats.sh
ml singularity
for file in $DIR/1-contigs/hifiasm.phase/*tg.gfa; do
    name=$(basename $file .gfa)
    echo $name
    awk '/^S/{print ">"$2;print $3}' $file |
        singularity exec \
            /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
            /usr/lib/abyss/abyss-fac
    done
    #+end_src

    #+RESULTS:
    |        | hap1.p_ctg | hap2.p_ctg |   p_ctg |  p_utg |   r_utg |
    |--------+------------+------------+---------+--------+---------|
    | n      |      26223 |      19372 |   19068 | 122093 |  209639 |
    | n:500  |      26223 |      19372 |   19068 | 122093 |  209639 |
    | L50    |       4479 |       4098 |    3174 |  17668 |   38157 |
    | min    |        784 |       2041 |     784 |    736 |     549 |
    | N75    |      86016 |      90966 |  143428 |  29982 |   16629 |
    | N50    |     154423 |     155932 |  267102 |  71170 |   37222 |
    | N25    |     254397 |     255839 |  473225 | 132325 |   70755 |
    | E-size |     189646 |     193792 |  352843 |  98338 |   50435 |
    | max    |    1472460 |    1402750 | 2041097 | 942329 |  398672 |
    | sum    |    2.264e9 |    2.085e9 | 2.928e9 | 4.56e9 | 5.188e9 |
  - =tar= output files (sorted by relevance and size)

    #+begin_src shell :tangle 1-contigs/hifiasm.phase/tar.sh
tar -czf $DIR/1-contigs/hifiasm.phase.tar.gz \
    -C   $DIR/1-contigs/hifiasm.phase/ \
    genome.hic.hap1.p_ctg.gfa \
    genome.hic.hap2.p_ctg.gfa \
    genome.hic.p_ctg.gfa \
    genome.hic.p_utg.gfa \
    genome.hic.r_utg.gfa \
    genome.hic.hap2.p_ctg.noseq.gfa \
    genome.hic.hap1.p_ctg.noseq.gfa \
    genome.hic.p_ctg.noseq.gfa \
    genome.hic.p_utg.noseq.gfa \
    genome.hic.r_utg.noseq.gfa \
    genome.hic.hap2.p_ctg.lowQ.bed \
    genome.hic.hap1.p_ctg.lowQ.bed \
    genome.hic.p_ctg.lowQ.bed \
    genome.hic.p_utg.lowQ.bed \
    genome.hic.r_utg.lowQ.bed \
    genome.hic.lk.bin \
    genome.ovlp.reverse.bin \
    genome.ovlp.source.bin \
    genome.ec.bin \
    genome.hic.tlb.bin
    #+end_src


- comparison

#+begin_src sh :colnames '("Statistic" "shasta" "canu" "wtdbg2" "hifasm" "flye (nano-hq)" "flye (nano-corr)")
ROOT=$(git rev-parse --show-toplevel)
ml singularity/3.8.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
        kk/1-contigs/shasta/Assembly.fasta \
        kk/1-contigs/canu/canu.contigs.fasta \
        kk/1-contigs/wtdbg2/dbg.raw.fa \
        kk/1-contigs/hifiasm/hifiasm.bp.p_ctg.fatest.p_ctg.fa \
        kk/1-contigs/flye/assembly.fasta \
        kk/1-contigs/flye_corr/assembly.fasta
#+end_src

#+RESULTS:
| name   |   shasta |      canu |     wtdbg2 |  hifiasm | flye (nano-hq) | flye (nano-corr) |
|--------+----------+-----------+------------+----------+----------------+------------------|
| n      |    13671 |      8047 |        710 |     2625 |           7831 |             6994 |
| n:500  |    13501 |      8047 |        710 |     2625 |           7830 |             6992 |
| L50    |     2894 |       521 |         50 |      297 |           1455 |             1282 |
| min    |      507 |      1114 |       2261 |     3598 |            528 |              508 |
| N75    |    17224 |    103348 |    1590418 |   213535 |          59817 |            66664 |
| N50    |    29894 |    280353 |    2861231 |   483159 |         112586 |           124051 |
| N25    |    48305 |    572593 |    5194771 |   906223 |         192405 |           214308 |
| E-size |    36036 |    530926 |    3637209 |   721462 |         139951 |           155190 |
| max    |   238763 |   7688614 | 13440000.0 |  4146154 |         721500 |           835109 |
| sum    | 277.4 Mb | 583.48 Mb |   489.4 Mb | 536.1 Mb |       547.0 Mb |         534.4 Mb |

#+ATTR_ORG: :width 750
[[./kk/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa.kirkii.png]]
#+ATTR_ORG: :width 750
[[./kk/1-contigs/wtdbg2/dbg.raw.fa.kirkii.png]]

Using wtdbg2 assembly.

** 2-arrange
- Orient and arrange using /Gossipiodes kirkii/
  #+begin_src sh :tangle kk/2-arrange/run.sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity

ragtag () {
    singularity exec --no-home -B$ROOT \
        $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
        ragtag.py "$@"

}

ragtag scaffold -u -t 48 -q 60 -o $DIR/kk/2-arrange/ -i 0.75  \
    $DIR/0-ref/kirkii.fa $DIR/kk/1-contigs/wtdbg2/dbg.raw.fa
  #+end_src

  #+call: abyss-fac(genome="kk/2-arrange/ragtag.scaffold.fasta")

  #+RESULTS:
  | n      |       298 |
  | n:500  |       298 |
  | L50    |         6 |
  | N75    | 3.570e+07 |
  | N50    | 3.865e+07 |
  | N25    | 4.483e+07 |
  | E-size | 3.960e+07 |
  | max    | 5.632e+07 |
  | sum    | 4.894e+08 |
  #+TBLFM: @4$2..@>$2=$0;%0.3e

  #+call: dotplot-kirkii(genome="kc/2-arrange/ragtag.scaffold.fasta")

  #+ATTR_ORG: :width 750
  [[./kk/2-arrange/ragtag.scaffold.fasta.kirkii.png]]
* Kokia cookei C69

#+header: :var runs=../0-raw/readme.org:kc-nanopore-sup[,1]
#+begin_src sh :tangle kc/combine.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $ROOT/0-raw/)

for file in "${runs[@]}"; do
      tar -Oxf $ROOT/wgs/0-raw/$file
done |
    zcat -f > $DIR/kc/combined.fq
#+end_src

** 1-contigs
- shasta

  #+begin_src sh :tangle kc/1-contigs/shasta.sh
ROOT=$(git rev-parse --show-toplevel)

$DIR/apps/shasta-0.10.0 \
    --input $DIR/kc/combined.fq \
    --threads 48 \
    --config Nanopore-May2022 \
    --assemblyDirectory $DIR/kc/1-contigs/shasta/
  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/shasta/Assembly.fasta")

  #+RESULTS:
  | n      |        5477 |
  | n:500  |        5416 |
  | L50    |         859 |
  | min    |         503 |
  | N75    |      101520 |
  | N50    |      185196 |
  | N25    |      304546 |
  | E-size |      225639 |
  | max    |     1284992 |
  | sum    | 519500000.0 |
  | name   |   kc/shasta |
- hifiasm
  #+begin_src sh :tangle kc/1-contigs/hifiasm.sh
PATH=$DIR/apps/hifiasm-0.16.1/:$PATH

hifiasm -t 48 -o $DIR/kc/1-contigs/hifiasm $DIR/kc/combined.fq
awk '/^S/{print ">"$2;print $3}' $DIR/kc/1-contigs/hifiasm.bp.p_ctg.gfa \
    > $DIR/kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa
  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa")

  #+RESULTS:
  | n      |        1159 |
  | n:500  |        1159 |
  | L50    |         132 |
  | min    |        3607 |
  | N75    |      636832 |
  | N50    |     1248703 |
  | N25    |     2168255 |
  | E-size |     1546437 |
  | max    |     5878698 |
  | sum    | 544600000.0 |
  | name   |  kc/hifiasm |
  - dotplot against kirkii

    #+name: dotplot-kirkii
    #+header: :var genome="kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa"
    #+header: :var out="kc/1-contigs/hifiasm.kirkii.png"
    #+begin_src sh
ml gd/2.3.0

echo $DIR/apps/dotplot/dotplot -t 12 -p grey -o $DIR/$out $DIR/0-ref/kirki.fa $DIR/$genome
    #+end_src


    #+ATTR_ORG: :width 750
    [[./kc/1-contigs/hifiasm.kirkii.png]]
- wtdbg2

  Assemble with wtdbg2 PacBio CCS reads look to have a similar error rate to the
  latest nanopore basecalling model, sup. Trying those presets.

  #+begin_src sh :tangle kc/1-contigs/wtdbg2/run.sh
PATH=$DIR/apps/wtdbg-2.5_x64_linux/:$PATH

cd $DIR/kc/1-contigs/wtdbg2/
wtdbg2 -x ccs -g 590m -i $DIR/kc/combined.fq -t 48 -fo dbg

# derive consensus
wtpoa-cns -t 48 -i dbg.ctg.lay.gz -fo dbg.raw.fa


  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/wtdbg2/dbg.raw.fa")

  #+RESULTS:
  | n      |        1312 |
  | n:500  |        1312 |
  | L50    |          44 |
  | min    |        1335 |
  | N75    |     1795357 |
  | N50    |     3228960 |
  | N25    |     6031992 |
  | E-size |     4064933 |
  | max    |  11860000.0 |
  | sum    | 492700000.0 |
  | name   |   kc/wtdbg2 |

  - dotplot against kirkii

    #+call: dotplot-kirkii(genome="kc/1-contigs/wtdbg2/dbg.raw.fa")

    #+ATTR_ORG: :width 750
    [[./kc/1-contigs/wtdbg2/dbg.raw.fa.kirkii.png]]
- canu

  #+begin_src sh :tangle kc/1-contigs/canu/run.sh
PATH=$DIR/apps/canu-2.2/bin:$PATH

canu -p canu -d $DIR/kc/1-contigs/canu/ useGrid=true gridOptions=-Agbru_kokia \
     genomeSize=590m -nanopore $DIR/kc/combined.fq
  #+end_src

  #+call: abyss-fac(genome="kc/1-contigs/canu/canu.contigs.fasta")

  #+RESULTS:
  | n      |        3775 |
  | n:500  |        3775 |
  | L50    |         196 |
  | min    |        1240 |
  | N75    |      312249 |
  | N50    |      739053 |
  | N25    |     1433996 |
  | E-size |     1185320 |
  | max    |     8055587 |
  | sum    | 561600000.0 |
  | name   |     kc/canu |


#+begin_src sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity/3.7.3

singularity exec -B $ROOT \
    /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
    /usr/lib/abyss/abyss-fac \
        kc/1-contigs/shasta/Assembly.fasta \
        kc/1-contigs/canu/canu.contigs.fasta \
        kc/1-contigs/wtdbg2/dbg.raw.fa \
        kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa
#+end_src

|        |  shasta |      canu | wtdbg2    | *hifiasm* |
|--------+---------+-----------+-----------+---------|
| n      |    5477 |      3775 | 1312      |  *1159* |
| L50    |     859 |       196 | *44*      |     132 |
| min    |     503 |      1240 | 1335      |  *3607* |
| N75    |  101520 |    312249 | *1795357* |  636832 |
| N50    |  185196 |    739053 | *3228960* | 1248703 |
| N25    |  304546 |   1433996 | *6031992* | 2168255 |
| E-size |  225639 |   1185320 | *4064933* | 1546437 |
| max    | 1284992 |   8055587 | *11.86e6* | 5878698 |
| sum    | 519.5e6 | *561.6e6* | 492.7e6   | 544.6e6 |

#+begin_src sh
montage -geometry +0+0 kc/1-contigs/hifiasm.kirkii.png kc/wtdbg2.kirkii.png kc/1-contigs/dotplots.kirkii.png
#+end_src

#+RESULTS:

#+ATTR_ORG: :width 1000
[[./kc/1-contigs/dotplots.kirkii.png]]

Based on the number of contigs, the size of the assembly, and the dotplots, the
hifiasm looks to be the best out of the four.

** 2-arrange
- Orient and arrange using /Gossipiodes kirkii/
  #+begin_src sh
zcat $DIR/0-ref/kirkii.fa.gz > $DIR/0-ref/kirkii.fa
  #+end_src

  #+begin_src sh :tangle kc/2-arrange/run.sh
ROOT=$(git rev-parse --show-toplevel)
ml singularity

ragtag () {
    singularity exec --no-home -B$ROOT \
        $DIR/apps/ragtag_2.1.0--pyhb7b1952_0.sif \
        ragtag.py "$@"

}

ragtag scaffold -u -t 48 -q 60 -o $DIR/kc/2-arrange/ -i 0.75  \
    $DIR/0-ref/kirkii.fa $DIR/kc/1-contigs/hifiasm.bp.p_ctg.fatest.p_ctg.fa
  #+end_src

  #+call: abyss-fac(genome="kc/2-arrange/ragtag.scaffold.fasta")

  #+RESULTS:
  | n      |       481 |
  | L50    |         6 |
  | min    |      3607 |
  | N75    | 3.648e+07 |
  | N50    | 3.943e+07 |
  | N25    | 4.926e+07 |
  | E-size | 4.110e+07 |
  | max    | 5.863e+07 |
  | sum    | 5.446e+08 |
  #+TBLFM: @4$2..@>$2=$0;%0.3e

  #+call: dotplot-kirkii(genome="kc/2-arrange/ragtag.scaffold.fasta")

  #+ATTR_ORG: :width 750
  [[./kc/2-arrange/ragtag.scaffold.fasta.kirkii.png]]
