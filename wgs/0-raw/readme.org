#+TITLE: Whole Genome Sequencing Samples
#+PROPERTY:  header-args :var DIR=(file-name-directory buffer-file-name)

* Kokia cookei C69

* Kokia kauaiensis S9

* Kokia drynarioides JFW-HI
Biosample: SAMN07559306

** Nanopore

|          |    QC |         QC |   Run |        Run |
| ID       | Pores |       Date | Pores |       Date |
|----------+-------+------------+-------+------------|
| FAL29342 |  1573 | 2019-08-13 |  1536 | 2019-08-26 |
| FAL22953 |  1181 | 2019-08-13 |  1161 | 2019-08-26 |
| FAL18435 |  1282 | 2019-08-13 |  1253 | 2019-08-26 |
| FAL18647 |  1270 | 2019-08-13 |  1210 | 2019-08-26 |
| FAL29558 |  1368 | 2019-08-13 |  1362 | 2019-08-26 |

#+NAME: kd-nanopore-runs
| ID       | Directory                                            |
|----------+------------------------------------------------------|
| FAL29342 | kd/nanopore/20190826_1854_GA10000_FAL29342_89e34370/ |
| FAL22953 | kd/nanopore/20190826_1854_GA20000_FAL22953_79be28df/ |
| FAL18435 | kd/nanopore/20190826_1854_GA30000_FAL18435_98887108/ |
| FAL18647 | kd/nanopore/20190826_1854_GA40000_FAL18647_98f13006/ |
| FAL29558 | kd/nanopore/20190826_1854_GA50000_FAL29558_fd9e83e6/ |

#+Name: sum-stats
#+Caption: Summary statistics of Kokia drynarioides nanopore runs
#+begin_src sh :tangle sum-stats.sh :var flowcells=kd-nanopore-runs
ROOT=$(git rev-parse --show-toplevel)

ml singularity
abyss-fac () {
    singularity exec -B$ROOT \
        /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif \
        /usr/lib/abyss/abyss-fac $@
}

for name in "${!flowcells[@]}"; do
     abyss-fac $DIR/${flowcells[$name]}/fastq_pass.fq.gz
done
#+end_src
| name     |       n |   n:500 |    L50 | min |  N75 |  N50 |   N25 | E-size |    max |     sum |
|----------+---------+---------+--------+-----+------+------+-------+--------+--------+---------|
| FAL29342 | 3309350 | 3211137 | 713370 | 500 | 4115 | 7720 | 12006 |   8683 |  81964 | 16.96e9 |
| FAL22953 | 2013654 | 1945000 | 438810 | 500 | 4756 | 8569 | 12689 |   9390 |  74154 | 11.17e9 |
| FAL18435 | 2630147 | 2566886 | 604515 | 500 | 4446 | 7996 | 11762 |   8732 |  85075 | 14.27e9 |
| FAL18647 | 3139279 | 3066621 | 832101 | 500 | 4585 | 6987 |  9652 |   7577 | 158915 | 16.37e9 |
| FAL29558 | 2874891 | 2794287 | 696116 | 500 | 4371 | 7130 | 10202 |   7773 |  84269 | 14.35e9 |

*** Super Accurate Basecalling

Two runs (0 and 2) had an issue, copied below, with read splitting. Removed the flag and
reran just those.
#+begin_quote
[guppy/error] pipeline::ThreadedNode::worker_function: Exception thrown in
dataHandlerNode worker thread: Basecall telemetry received for non-existent run
segment of run ID
#+end_quote


#+begin_src sh :tangle basecall.kd.sh :var flowcells=kd-nanopore-runs[,1]
ml singularity
ROOT=$(git rev-parse --show-toplevel)

guppy () {
    singularity exec -B$ROOT ~/guppy-gpu.sif guppy_basecaller "$@"
}


id="${flowcells[$SLURM_ARRAY_TASK_ID]}"

SCRATCH=/local/scratch/tony.arick/$SLURM_JOB_ID

cp $DIR/$id/fast5_pass.tar $DIR/$id/fast5_fail.tar $SCRATCH

mkdir $SCRATCH/fast5/ $SCRATCH/super
tar -C $SCRATCH/fast5 -xvf $SCRATCH/fast5_pass.tar
tar -C $SCRATCH/fast5 -xvf $SCRATCH/fast5_fail.tar

if [ -e $DIR/$id/fast5_skip.tar ]; then
    cp $DIR/$id/fast5_skip.tar $SCRATCH
    tar -C $SCRATCH/fast5 -xvf $SCRATCH/fast5_skip.tar
fi

guppy -c dna_r9.4.1_450bps_sup_plant.cfg \
    --compress_fastq \
    --device "cuda:all:100%" \
    --input_path $SCRATCH/fast5 \
    --save_path $SCRATCH/super

cp -r $SCRATCH/super $DIR/$id/sup

#+end_src

#+RESULTS:

- =tar= files as usual
  #+begin_src sh :tangle sup.backup.sh :var flowcells=kd-nanopore-runs[,1]

datadir=("sup/super/" "sup/" "sup/super/" "sup/" "sup/")

for i in {0..4}; do
    id="${flowcells[$i]}"
    pushd $DIR/$id/

    printf "Compressing summary    "
    gzip -c ${datadir[$i]}/sequencing_summary.txt > sup.sequencing_summary.txt.gz
    echo "[ OK ]"
    for dir in pass fail; do
        printf "Pre tar md5sum         "
        find ${datadir[$i]}/$dir -type f -execdir md5sum {} \; > sup.$dir.pre.md5 && echo "[ OK ]" || echo "[FAIL]"

        printf "Tar files              "
        tar -C ${datadir[$i]}/$dir -cf sup.$dir.tar ./ && echo "[ OK ]" || echo "[FAIL]"

        printf "Post tar md5sum        "
        tar --to-command=md5sum -vxf sup.$dir.tar |
            awk 'NR > 2{printf "%s  ./%s\n", $2, $1}' \
                RS='./' FS="[\n ]" > sup.$dir.post.md5 && echo "[ OK ]" || echo "[FAIL]"
        printf "Check md5sum           "
        cmp --quiet sup.$dir.{pre,post}.md5 && echo "[ OK ]" || echo "[FAIL]"
    done

    printf "Create fastq file      "
    tar -Oxf sup.pass.tar > sup.pass.fq.gz && echo "[ OK ]" || echo "[FAIL]"

   popd
done
  #+end_src

- Summary stats
  #+begin_src sh :tangle fastq.pass.sup.sh :var flowcells=kd-nanopore-runs[,1]
ml singularity
ROOT=$(git rev-parse --show-toplevel)

abyss-fac () {
 /apps/singularity-3/abyss/abyss-v2.1.5-7-deb_cv1.sif /usr/lib/abyss/abyss-fac "$@"
}

abyss-fac $(printf "$DIR/%s/sup.pass.fq.gz " "${flowcells[@]}")
  #+end_src
| name     |        n |    n:500 |     L50 | min |  N75 |  N50 |   N25 | E-size |    max |     sum |
|----------+----------+----------+---------+-----+------+------+-------+--------+--------+---------|
| FAL29342 |  2399080 |  2335266 |  524164 | 500 | 4023 | 7523 | 11740 |   8459 |  62543 | 12.16e9 |
| FAL22953 |  1588078 |  1496354 |  334293 | 500 | 4183 | 7628 | 11510 |   8414 | 239982 | 7.665e9 |
| FAL18435 |  2101459 |  2044849 |  484096 | 500 | 4337 | 7837 | 11525 |   8505 | 122836 | 11.17e9 |
| FAL18647 |  2853813 |  2747298 |  728732 | 500 | 4097 | 6425 |  8973 |   6919 |  70679 | 13.24e9 |
| FAL29558 |  2622225 |  2509225 |  617130 | 500 | 3922 | 6512 |  9422 |   7105 |  63513 |  11.7e9 |
|----------+----------+----------+---------+-----+------+------+-------+--------+--------+---------|
| Total    | 11564655 | 11132992 | 2688415 |     | 4112 | 7185 | 10634 |   7880 | 239982 | 55.94e9 |
#+TBLFM: @>$2..@>$4=vsum(@I$0..@II$0)::@>$6..@>$9=vmean(@I$0..@II$0);%d
#+TBLFM: @>$10=vmax(@I$0..@II$0)::@>$11=vsum(@I$0..@II$0);e4
*** cleanup/backup

- Since lustre doesn't like lots of small files, =tar= the fast5 and fastq
  directories. Run =md5sum= pre- and post- =tar= for paranoia. Not =gzip='ing
  since the data being =tar='d is already compressed. Consolidate duplex run
  into pass/fail fastq files.

  Base-calling for two of the runs was cut short and restarted. Combining the
  original call directory (fastq_pass) and the restart directory (fastq_new)
  into the fastq_pass.tar.gz. The restarted reads start with =fastq_runid_=.

  #+begin_src sh :tangle backup.nano.sh :var flowcells=kd-nanopore-runs[,1]
  for id in "${flowcells[@]}"; do
      pushd $DIR/$id/

      gzip *_sequencing_summary.txt fastq_{pass,fail}/*.fastq
      for dir in fast{5,q}_{fail,pass} fast5_skip; do
          [ -d $dir ] || continue
          find $dir -type f -execdir md5sum {} \; > $dir.pre.md5
          tar -C $dir -vcf $dir.tar ./
          tar --to-command=md5sum -vxf $dir.tar |
              awk 'NR > 2{printf "%s  ./%s\n", $2, $1}' \
                  RS='./' FS="[\n ]" > $dir.post.md5
          diff $dir.{pre,post}.md5 > $dir.md5.check
      done

      if [ -d "fastq_new" ] ; then
          gzip fastq_new/*.fastq

          gzip --stdout fastq_new/sequencing_summary.txt >> *_sequencing_summary.txt.gz
          rm fastq_new/*.log fastq_new/sequencing_summary.txt fastq_new/sequencing_telemetry.js

          find fastq_new -type f -execdir md5sum {} \; >> fastq_pass.pre.md5
          tar -C fastq_new -vrf fastq_pass.tar ./
          tar --to-command=md5sum -vxf fastq_pass.tar |
              awk 'NR > 2{printf "%s  ./%s\n", $2, $1}' \
                  RS='./' FS="[\n ]" > fastq_pass.post.md5
          diff fastq_pass.{pre,post}.md5  > fastq_pass.md5.check
      fi


      popd
done
  #+end_src

- The following will get the fastq data from the tar file into a single fastq.gz
  file
  #+begin_src sh :tangle restore.nano.sh :var flowcells=kd-nanopore-runs[,1]
  ROOT=$(git rev-parse --show-toplevel)

  for dir in "${flowcells[@]}"; do
      tar -Oxf $DIR/$dir/fastq_pass.tar > $DIR/$dir/fastq_pass.fq.gz
  done
  #+end_src

  FAL29558 and FAL18435 had malformed fastq files. Excluding them since we have
  coverage to spare.
  #+begin_src sh

tar -Oxf $DIR/kd/nanopore/20190826_1854_GA50000_FAL29558_fd9e83e6/fastq_pass.tar \
    --exclude=./FAL29558_c95ea3ae2ba850cfa310d38dc7f59268d6e2e2b8_628.fastq.gz \
    > $DIR/kd/nanopore/20190826_1854_GA50000_FAL29558_fd9e83e6/fastq_pass.fq.gz

tar -Oxf $DIR/kd/nanopore/20190826_1854_GA30000_FAL18435_98887108/fastq_pass.tar \
    --exclude=./FAL18435_a661f44b2edcc62a3f030caaf8581f84b2fa6838_373.fastq.gz \
    > $DIR/kd/nanopore/20190826_1854_GA30000_FAL18435_98887108/fastq_pass.fq.gz

  #+end_src

- Add data to git-annex
  #+begin_src sh :tangle git.nano.sh :var flowcells=kd-nanopore-runs[,1]
  for id in "${flowcells[@]}"; do
      pushd $DIR/$id/

      git add report.pdf final_summary.txt
      git annex add *sequencing_summary.txt.gz \
          fast?_{pass,fail}.tar \
          fastq_pass.fq.gz \
          report.md duty_time.csv.gz throughput.csv.gz
      popd
  done
  #+end_src

** Illumina

#+Name: kd-illumina-sra
| Run        | InsertSize | Instrument          |
|------------+------------+---------------------|
| SRR6195037 |        350 | Illumina MiSeq      |
| SRR6195036 |        350 | Illumina MiSeq      |
| SRR6195040 |        350 | Illumina HiSeq 2000 |
| SRR6195039 |        550 | Illumina MiSeq      |
| SRR6195038 |        550 | Illumina MiSeq      |
| SRR6195041 |        550 | Illumina HiSeq 2000 |

#+header: :var acc=kd-illumina-sra[,0]
#+begin_src sh :tangle kd/illumina/download.sra.sh
cd $DIR/kd/illumina/

for SRA in "${acc[@]}"; do

    URL=ftp://ftp.sra.ebi.ac.uk/vol1/fastq/${SRA:0:6}/

    if [ ${#SRA} -gt 9 ]; then
        DIR=00${SRA:9}
        URL+=${DIR: -3}/
    fi

    URL+=$SRA

    wget $URL/${SRA}_1.fastq.gz
    wget $URL/${SRA}_2.fastq.gz

done
#+end_src

** Hi-C

Hi-C library made by Phase-Genomics

#+name: kd-hic
| name   | forward                         | reverse                         |
|--------+---------------------------------+---------------------------------|
| kd-hic | kd/hi-c/kokia_S3HiC_R1.fastq.gz | kd/hi-c/kokia_S3HiC_R2.fastq.gz |


** RNA-Seq

| Run        | Instrument  |
|------------+-------------|
| SRR6195950 | HiSeq X Ten |
