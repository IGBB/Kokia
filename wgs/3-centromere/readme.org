#+title: Centromere Location
#+PROPERTY:  header-args :var DIR=(file-name-directory buffer-file-name)

The centromere locations have been shown to be hypomethylated surrounded by regions of hypermethylations in mouse ([[https://doi.org/10.1371%2Fjournal.pgen.0020017][Wong et al. 2006]]), arabidobisis and maize ([[https://academic.oup.com/plcell/article/20/1/25/6091186][Zhang, et al. 2008]]), and medaka ([[https://www.nature.com/articles/s41467-017-01982-7][Ichikawa, et al. 2017]]). The inter-chromosome interactions found in the Hi-C data peak around the centromere ([[https://academic.oup.com/nar/article/43/11/5331/1171025][Varoquaux, et al. 2015]]) as well. Combining the two datasets may give a better picture of the centromeres.

#+begin_quote
Here, we report that the 178-bp repeats associated with the CENH3-containing chromatin (CEN chromatin) are hypomethylated compared with the same repeats located in the flanking pericentromeric regions. A similar hypomethylation of DNA in CEN chromatin was also revealed in maize (Zea mays).

Wenli Zhang, Hye-Ran Lee, Dal-Hoe Koo, Jiming Jiang, Epigenetic Modification of Centromeric Chromatin: Hypomethylation of DNA Sequences in the CENH3-Associated Chromatin in Arabidopsis thaliana and Maize, The Plant Cell, Volume 20, Issue 1, January 2008, Pages 25â€“34, https://doi.org/10.1105/tpc.107.057083
#+end_quote

#+begin_quote
[W]e uncover centromeres are mostly hypermethylated but have hypomethylated sub-regions that acquire unique sequence compositions independently.

Ichikawa, K., Tomioka, S., Suzuki, Y. et al. Centromere evolution and CpG methylation during vertebrate speciation. Nat Commun 8, 1833 (2017). https://doi.org/10.1038/s41467-017-01982-7
#+end_quote

#+begin_quote
The observed hypermethylation was consistent with the presence of a presumed transcriptionally silent chromatin state at the neocentromere. Within this neocentric chromatin, specific sites of active transcription and the centromeric chromatin boundary are defined by DNA hypomethylation.

Wong NC, Wong LH, Quach JM, Canham P, Craig JM, Song JZ, Clark SJ, Choo KH. Permissive transcriptional activity at the centromere through pockets of DNA hypomethylation. PLoS Genet. 2006 Feb;2(2):e17. doi: 10.1371/journal.pgen.0020017. Epub 2006 Feb 10. PMID: 16477312; PMCID: PMC1361766.
#+end_quote


#+name:genomes
| Name | Fasta                         |
|------+-------------------------------|
| Kc   | 1-assembly/5-curate/Kc.fa.gz  |
| Kd   | 1-assembly/5-curate/Kd.fa.gz  |
| Kk   | 1-assembly/5-curate/Kk.fa.gz  |

* Methylation

#+name:models
| Name | Model                              |
|------+------------------------------------|
| Kc   | dna_r10.4.1_e8.2_260bps_sup@v4.1.0 |
| Kk   | dna_r10.4.1_e8.2_260bps_sup@v4.1.0 |
| Kd   | dna_r9.4.1_e8_sup@v3.3             |

** Extract raw files
Extract the fast5 files from tar files. Validate each fast5 file since =dorado= dies without output when it encounters an invalid file.

#+header: :var Kc=../0-raw/readme.org:kc-nanopore-runs
#+header: :var Kd=../0-raw/readme.org:kd-nanopore-runs
#+header: :var Kk=../0-raw/readme.org:kk-nanopore-runs
#+begin_src sh :tangle 1-meth/0-extract/run.sh
RAW=$(realpath $DIR/../0-raw/)

species=(Kc Kd Kk)
spec=${species[$SLURM_ARRAY_TASK_ID]}
flowcells=$spec[@]

mkdir $DIR/1-meth/0-extract/$spec

for LOC in ${!flowcells}; do
    for file in $RAW/$LOC/fast5_{pass,fail,skip,all,tmp}.tar; do
        [ -e $file ] && echo $file
    done
done |
    parallel -j 4 --eta --line-buffer \
        tar --strip=1 --show-transformed \
        -C $DIR/1-meth/0-extract/$spec -vxf {} '*.fast5' |
    awk '{printf "%s/1-meth/0-extract/%s/%s\n", dir, spec, $0}' \
        dir=$DIR spec=$spec |
    while read file; do
        h5_validate multi_read_fast5.yaml $file > /dev/null &&
            echo $file
    done > $DIR/1-meth/0-extract/$spec.lst
#+end_src
** Run Dorado (MIG)

Run dorado on the extracted fast5 files. dorado dies randomly reading from the network fs. Copying data to the local fs before running. Also only using the chrs as reference.

#+header: :var genomes=genomes
#+header: :var models=models
#+header: :prologue "#SBATCH --partition=gpu-a100 --gres=gpu:a100_1g.10gb:1 --mem=64Gb --array=1-90 --time=36:00:00"
#+begin_src sh :tangle 1-meth/1-dorado/call.sh
PATH=$DIR/apps/samtools-1.17/:$PATH
SCRATCH=/local/scratch/tony.arick/$SLURM_JOB_ID/

# Set spec with --export=spec=Kd

zcat $DIR/../${genomes[$spec]} > $SCRATCH/$spec.all.fa
samtools faidx $SCRATCH/$spec.all.fa \
    ${spec}_{01,2_4,03} ${spec}_{05..13} \
    > $SCRATCH/$spec.chr.fa

split -n "l/$SLURM_ARRAY_TASK_ID/90" $DIR/1-meth/0-extract/$spec.lst |
    xargs cp -v -t $SCRATCH

DORADO_DIR=$DIR/apps/dorado-0.4.1-linux-x64
PATH=$DORADO_DIR/bin/:$PATH
model="$DORADO_DIR/models/${models[$spec]}"

dorado basecaller $model $SCRATCH \
    --reference $SCRATCH/$spec.chr.fa \
    --modified-bases 5mCG_5hmCG \
    > $DIR/1-meth/1-dorado/$spec.5mCG-5hmCG.$SLURM_ARRAY_TASK_ID.bam
  #+end_src

** Combine and Sort
  #+begin_src sh :tangle 1-meth/2-combine/run.sh
PATH=$DIR/apps/samtools-1.17-centos/:$PATH

# Set spec with --export=spec=Kd

samtools cat $DIR/1-meth/1-dorado/$spec.5mCG-5hmCG.{1..90}.bam |
    samtools sort -m 500G -o $DIR/1-meth/2-combine/$spec.bam -
samtools index $DIR/1-meth/2-combine/$spec.bam
#+end_src

** Modkit
:PROPERTIES:
:ID:       69002216-60ea-4da5-a31d-3c2d7f4e5ec8
:END:

Downloaded v0.2.4 from [[https://github.com/nanoporetech/modkit/releases/download/v0.2.4/modkit_v0.2.4_centos7_x86_64.tar.gz][github repo]]

#+header: :var genomes=genomes
#+begin_src sh :tangle 1-meth/3-modkit/run.sh
SCRATCH=/local/scratch/tony.arick/$SLURM_JOB_ID
PATH=$DIR/apps/modkit_v0.2.4/:$PATH
PATH=$DIR/apps/samtools-1.17-centos/:$PATH
# Set spec with --export=spec=Kd

zcat $DIR/../${genomes[$spec]} > $SCRATCH/$spec.all.fa
samtools faidx $SCRATCH/$spec.all.fa \
    ${spec}_{01,2_4,03} ${spec}_{05..13} \
    > $SCRATCH/$spec.chr.fa

# modbam2bed --aggregate -p $DIR/1-meth/3-modbam2bed/$spec \
#     -e --combine --cpg --chh --chg -t 48 \
#     $SCRATCH/$spec.chr.fa $DIR/1-meth/2-combine/$spec.bam

modkit pileup $DIR/1-meth/2-combine/$spec.bam \
    $DIR/1-meth/3-modkit/$spec.bed \
    --ref $SCRATCH/$spec.chr.fa \
    --preset traditional \
    --threads 48

#+end_src

#+RESULTS:

* Hi-C inter-chr interactions
#+name: hic
| Name | Forward                                              | Reverse                                              |
|------+------------------------------------------------------+------------------------------------------------------|
| Kc   | Kc/hi-c/Kc_HiC_CKDL220020122-1A_HCWYNDSX5_L1_1.fq.gz | Kc/hi-c/Kc_HiC_CKDL220020122-1A_HCWYNDSX5_L1_2.fq.gz |
| Kd   | kd/hi-c/kokia_S3HiC_R1.fastq.gz                      | kd/hi-c/kokia_S3HiC_R2.fastq.gz                      |
| Kk   | Kk/hi-c/Kk_HiC_CKDL220020123-1A_HCWYNDSX5_L1_1.fq.gz | Kk/hi-c/Kk_HiC_CKDL220020123-1A_HCWYNDSX5_L1_2.fq.gz |


- Create Database
  #+header: :var names=genomes[,0]
  #+header: :var genomes=genomes
  #+begin_src sh :tangle 2-hic/0-db/run.sh
PATH=$DIR/apps/bwa-0.7.17/:$PATH
PATH=$DIR/apps/samtools-1.17-centos/:$PATH
SCRATCH=/local/scratch/tony.arick/$SLURM_JOB_ID/

spec="${names[${SLURM_ARRAY_TASK_ID}]}"

zcat $DIR/../${genomes[$spec]} > $SCRATCH/$spec.all.fa
samtools faidx $SCRATCH/$spec.all.fa \
    ${spec}_{01,2_4,03} ${spec}_{05..13} \
    > $SCRATCH/$spec.chr.fa

bwa index -a bwtsw -p $DIR/2-hic/0-db/$spec $SCRATCH/$spec.chr.fa
  #+end_src

- Align Hi-C data
  #+header: :var names=genomes[,0]
  #+header: :var data=hic
  #+begin_src sh :tangle 2-hic/1-bwa/run.sh
ROOT=$(git rev-parse --show-toplevel)
RAW=$(realpath $ROOT/wgs/0-raw/)

PATH=$DIR/apps/bwa-0.7.17/:$PATH
PATH=$DIR/apps/samtools-1.17-centos/:$PATH
PATH=$PATH:$DIR/apps/samblaster-v.0.1.26/
SCRATCH=/local/scratch/tony.arick/$SLURM_JOB_ID/

spec="${names[${SLURM_ARRAY_TASK_ID}]}"

readarray -t files <<<"${data[$spec]}"

bwa mem -5SP -t 48 $DIR/2-hic/0-db/$spec \
    $RAW/${files[0]} $RAW/${files[1]} |
    samblaster |
    samtools view -bS -F 2316 |
    samtools sort -m 60G -o $DIR/2-hic/1-bwa/$spec.bam
  #+end_src

- Get off chr contact from hic
  #+header: :var names=genomes[,0]
  #+begin_src sh  :tangle 2-hic/2-offtarget/run.sh
PATH=$DIR/apps/samtools-1.17-centos/:$PATH
for name in "${names[@]}"; do
    samtools view -h $DIR/2-hic/1-bwa/$name.bam |
        awk '$7 != "="' |
        samtools view -Sb - > $DIR/2-hic/2-offtarget/$name.bam

    samtools index $DIR/2-hic/2-offtarget/$name.bam
done
  #+end_src

* TRF
  #+header: :var names=genomes[,0]
  #+header: :var genomes=genomes
  #+begin_src sh :tangle 3-trf/run.sh
PATH=$DIR/apps/:$PATH
PATH=$DIR/apps/samtools-1.17-centos/:$PATH
SCRATCH=/local/scratch/tony.arick/$SLURM_JOB_ID/

spec="${names[${SLURM_ARRAY_TASK_ID}]}"

zcat $DIR/../${genomes[$spec]} > $SCRATCH/$spec.all.fa

parallel --eta --tag \
    samtools faidx $SCRATCH/$spec.all.fa {} '|' \
    trf-v4.09.1 - 2 7 7 80 10 100000 500 -h -ngs \
    > $DIR/3-trf/$spec.dat \
    ::: ${spec}_{01,2_4,03} ${spec}_{05..13}
  #+end_src


* Figure

#+header: :var names=genomes[,0]
#+header: :var genomes=genomes
  #+begin_src sh :tangle 4-figure/1-get-cov.sh
ROOT=$(git rev-parse --show-toplevel)
PATH=$DIR/apps/bedtools2/bin/:$PATH
PATH=$DIR/apps/samtools-1.17-centos/:$PATH
SCRATCH=/local/scratch/tony.arick/$SLURM_JOB_ID/

for spec in "${!genomes[@]}"; do
    zcat $ROOT/wgs/${genomes[$spec]} > $SCRATCH/$spec.all.fa

    samtools faidx $SCRATCH/$spec.all.fa
    echo ${spec}_{01,2_4,03} ${spec}_{05..13} |
        tr ' ' '\n' |
        grep -w -f - $SCRATCH/$spec.all.fa.fai |
        grep -v Unplaced > $SCRATCH/$spec.genome

    bedtools makewindows -g $SCRATCH/$spec.genome \
        -w 5000 -s 2500 > $DIR/4-figure/$spec.5k-window-2.5k-slide.bed

    bedtools coverage \
        -a $DIR/4-figure/$spec.5k-window-2.5k-slide.bed \
        -b $DIR/1-meth/3-modkit/$spec.bed \
        > $DIR/4-figure/$spec.meth.bedcov

    samtools bedcov $DIR/4-figure/$spec.5k-window-2.5k-slide.bed \
        $DIR/2-hic/2-offtarget/$spec.bam \
        > $DIR/4-figure/$spec.hic.bedcov

    awk '!/@/ { print $1,$2,$3 }' OFS="\t" $DIR/3-trf/$spec.dat |
        sort -k1,1 -k2,3n |
        bedtools merge -d 250000 -i - \
            > $DIR/4-figure/$spec.trf.bed
done
  #+end_src

#+begin_src R
library(tidyverse)

between.IQR <- function(x) {
  if(any(is.na(x)))
    stop("x is missing values")
  if(!is.numeric(x))
    stop("x is not numeric")
  Q3<-quantile(x,0.75)
  Q1<-quantile(x,0.25)
  IQR<-(Q3-Q1)
  left<- (Q1-(1.5*IQR))
  right<- (Q3+(1.5*IQR))
  between(x, left, right)
}

read.bedcov <- function (f) {
  read.delim(f, header=F,
             col.names=c("Chr", "Start", "End", "Count",
                         "Bases", "Length", "Fraction")) %>%
  mutate_at(vars(-Chr), as.numeric)
}

data.meth <- read.bedcov("4-figure/Kk.meth.bedcov")%>%
  mutate_at(vars(-Chr), as.numeric) %>%
  replace_na(list(Avg.Read=0, Avg.Meth=0)) %>%
  group_by(Chr) %>%
  mutate(outlier = !between.IQR(Count))

ggplot(data.meth, aes(Count)) + geom_histogram()
summary(data.meth$Count)

data.hic <- read.bedcov("4-figure/Kk.hic.bedcov") %>%
  mutate_at(vars(-Chr), as.numeric) %>%
  group_by(Chr) %>%
  mutate(outlier = !between.IQR(Count))

data <- list(Methylation=data.meth, HiC=data.hic) %>%
  lapply(select, Chr, Start, End, Count, outlier) %>%
  bind_rows(.id="Type")

max.score.repeats <- read.table("4-figure/Kk.trf.bed") %>%
  select(Chr=V1, Start=V2, End=V3) %>%
  filter((End - Start) > 50000) %>%
  mutate(length = End - Start,
         fltr.start = Start - length,
         fltr.end = End + length)

repeats <- read.table("3-trf/Kk.dat", header=F, fill=T) %>%
  select(Chr=V1, Start=V2, End=V3, Size=V4, Count=V5, Score=V9) %>%
  mutate_at(vars(-Chr), as.numeric) %>%
  na.omit

## all.plot <- data %>%
##   pivot_wider(names_from=Type, values_from=c(Count, outlier)) %>%
##   filter(outlier_Methylation & outlier_HiC) %>%
##   ggplot(aes(Chr, Start)) +
##   geom_jitter(width=0.25) +
##   geom_linerange(aes(ymin=Start, ymax=End), repeats,
##                  size=5, color='red') +
##   scale_y_continuous(labels=scales::label_number_si(accuracy=1))+
##   coord_flip() +
##   theme_minimal()
## all.plot

plots <- mapply(function(chr, start, end){
  rep.fltr <- filter(repeats, Chr == chr & between(Start, start, end))
  meth.fltr <- filter(data.meth, Chr == chr & between(Start, start, end))
  hic.fltr <- filter(data.hic, Chr == chr & between(Start, start, end))
  cowplot::plot_grid(
             ggplot(hic.fltr, aes(Start, Count)) +
             geom_rect(aes(xmax=Start, xmin=End, ymax=Inf, ymin=-Inf),
                       rep.fltr,
                       color='grey', alpha=0.25) +
             geom_point(aes(color=outlier)) +
             ggtitle(sprintf("%s:%d-%d", chr, start, end)) +
             scale_x_continuous(expand=c(0,0),
               labels=scales::label_number_si(accuracy=0.01))+
             theme_minimal(),
             ggplot() +
             geom_rect(aes(xmax=Start, xmin=End, ymax=Inf, ymin=-Inf),
                       rep.fltr,
                       color='grey', alpha=0.25) +
             geom_point(aes(Start, Count, color=outlier), meth.fltr ) +
             ggtitle(sprintf("%s:%d-%d", chr, start, end)) +
             scale_x_continuous(expand=c(0,0),
               labels=scales::label_number_si(accuracy=0.01))+
             theme_minimal(),
             ncol=1)},
  max.score.repeats$Chr,
  max.score.repeats$fltr.start,
  max.score.repeats$fltr.end,
  SIMPLIFY=F) %>%
  cowplot::plot_grid(plotlist=.)
plots



    cowplot::plot_grid(all.plot, plots, rel_widths=c(1,3))

#+end_src

#+RESULTS:

#+begin_src R
library(tidyverse)
library(cowplot)

read.bedcov <- function (f) {
  read.delim(f, header=F,
             col.names=c("Chr", "Start", "End", "Count",
                         "Bases", "Length", "Fraction")) %>%
  mutate_at(vars(-Chr), as.numeric)
}
label_chrs <- function(x){
  scales::label_number_si(accuracy=1)(abs(x))
}

chr.sizes <- read.table("4-figure/Kd.5k-window-2.5k-slide.bed") %>%
  select(Chr=V1, End=V3) %>%
  group_by(Chr) %>%
  summarise(Size=max(End))

data.meth <- read.bedcov("4-figure/Kd.meth.bedcov")
data.hic  <- read.bedcov("4-figure/Kd.hic.bedcov")
data.repeats <- read.table("3-trf/Kd.dat", header=F, fill=T) %>%
  select(Chr=V1, Start=V2, End=V3, Size=V4, Count=V5, Score=V9) %>%
  mutate_at(vars(-Chr), as.numeric) %>%
  na.omit

plots <- lapply(unique(chr.sizes$Chr), function(chr) {
  data.fltr <- list(siz=chr.sizes, met=data.meth, hic=data.hic,
                    rep=data.repeats) %>%
    lapply(filter, Chr==chr)
  data.fltr[['met']] <- mutate(data.fltr[['met']],
                               Start = -1 * Start,
                               Meth = Count)
  data.fltr[['hic']] <- mutate(data.fltr[['hic']],
                               Start = -1 * Start,
                               Count = if_else(
                                 quantile(Count, 0.99) < Count,
                                 NA, Count))
  data.fltr[['rep']] <- mutate(data.fltr[['rep']],
                               Start = -1 * Start,
                               End   = -1 * End)
  plots <- list("met" = ggplot() +
                  geom_point(aes(Meth, Start, color=Meth, alpha=Count),
                             data.fltr[['met']], size=0.5) +
                  scale_color_distiller(type='div', palette='RdYlBu',
                                        direction=1) +
                  xlab("Methylation Density"),
                "hic" = ggplot() +
                  geom_tile(aes(1, Start, color=Count),
                            data.fltr[['hic']]) +
                  scale_color_distiller(type='seq', palette='Blues',
                                        direction=1) +
                  xlab("Hi-C Interactions"),
                "rep" = ggplot() +
                  geom_rect(aes(xmax=Inf, xmin=-Inf, ymax=1, ymin=-Size),
                            data.fltr[['siz']]) +
                  geom_errorbar(aes(x=1, ymin=Start, ymax=End),
                                data.fltr[['rep']],
                                position=position_dodge2()) +
                  xlab("Tandem Repeats"))  %>%
    lapply(function(p)
      p +
      scale_x_discrete(position='top',
                       expand=c(0,0)) +
      scale_y_continuous(labels=label_chrs,
                         limits=c(-1*max(chr.sizes$Size), -1)) +
      theme_minimal() +
      theme(legend.position='none',
            axis.title.y=element_blank(),
            axis.title.x=element_text(angle=90, hjust=0, vjust=0),
            axis.text.y=element_blank())
      )
  plot_grid(plotlist=plots, nrow=1, align='h')})
plot_grid(plotlist=plots, nrow=1)
#+end_src
